{"version":3,"sources":["../../src/controllers/stripe.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nconst Stripe = require('stripe');\nexport class StripeController {\n    public stripe = Stripe(process.env.STRIPE_SECRET_KEY);\n    public OnrampSessionResource = Stripe.StripeResource.extend({\n            create: Stripe.StripeResource.method({\n                method: 'POST',\n                path: 'crypto/onramp_sessions',\n            }),\n    });\n    public createSession = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n       const { transaction_details } = req.body;\n       const onrampSession = await new this.OnrampSessionResource(this.stripe).create({\n        transaction_details: {\n          destination_currency: transaction_details[\"destination_currency\"],\n          destination_exchange_amount: transaction_details[\"destination_exchange_amount\"],\n          destination_network: transaction_details[\"destination_network\"],\n        },\n        customer_ip_address: req.socket.remoteAddress,\n      });\n    \n      res.send({\n        clientSecret: onrampSession.client_secret,\n      });\n    }\n}"],"names":["StripeController","Stripe","require","stripe","process","env","STRIPE_SECRET_KEY","OnrampSessionResource","StripeResource","extend","create","method","path","createSession","req","res","next","transaction_details","body","onrampSession","destination_currency","destination_exchange_amount","destination_network","customer_ip_address","socket","remoteAddress","send","clientSecret","client_secret"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAEaA;;;eAAAA;;;;;;;;;;;;;;;;AADb,MAAMC,SAASC,QAAQ;AAChB,IAAA,AAAMF,mBAAN,MAAMA;;QACT,uBAAOG,UAASF,OAAOG,QAAQC,GAAG,CAACC,iBAAiB;QACpD,uBAAOC,yBAAwBN,OAAOO,cAAc,CAACC,MAAM,CAAC;YACpDC,QAAQT,OAAOO,cAAc,CAACG,MAAM,CAAC;gBACjCA,QAAQ;gBACRC,MAAM;YACV;QACR;QACA,uBAAOC,iBAAgB,OAAOC,KAAcC,KAAeC;YACxD,MAAM,EAAEC,mBAAmB,EAAE,GAAGH,IAAII,IAAI;YACxC,MAAMC,gBAAgB,MAAM,IAAI,IAAI,CAACZ,qBAAqB,CAAC,IAAI,CAACJ,MAAM,EAAEO,MAAM,CAAC;gBAC9EO,qBAAqB;oBACnBG,sBAAsBH,mBAAmB,CAAC,uBAAuB;oBACjEI,6BAA6BJ,mBAAmB,CAAC,8BAA8B;oBAC/EK,qBAAqBL,mBAAmB,CAAC,sBAAsB;gBACjE;gBACAM,qBAAqBT,IAAIU,MAAM,CAACC,aAAa;YAC/C;YAEAV,IAAIW,IAAI,CAAC;gBACPC,cAAcR,cAAcS,aAAa;YAC3C;QACF;;AACJ"}