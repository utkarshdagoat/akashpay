{"version":3,"sources":["../../src/services/auth.service.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\nimport { compare, hash } from 'bcrypt';\nimport { sign } from 'jsonwebtoken';\nimport { Service } from 'typedi';\nimport { SECRET_KEY } from '@config';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { HttpException } from '@exceptions/HttpException';\nimport { DataStoredInToken, TokenData } from '@interfaces/auth.interface';\nimport { User } from '@interfaces/users.interface';\n\n@Service()\nexport class AuthService {\n  public users = new PrismaClient().user;\n\n  public async signup(userData: CreateUserDto): Promise<User> {\n    const findUser: User = await this.users.findUnique({ where: { email: userData.email } });\n    if (findUser) throw new HttpException(409, `This email ${userData.email} already exists`);\n\n    const hashedPassword = await hash(userData.password, 10);\n    const createUserData: Promise<User> = this.users.create({ data: { ...userData, password: hashedPassword } });\n\n    return createUserData;\n  }\n\n  public async login(userData: CreateUserDto): Promise<{ cookie: string; findUser: User }> {\n    const findUser: User = await this.users.findUnique({ where: { email: userData.email } });\n    if (!findUser) throw new HttpException(409, `This email ${userData.email} was not found`);\n\n    const isPasswordMatching: boolean = await compare(userData.password, findUser.password);\n    if (!isPasswordMatching) throw new HttpException(409, \"Password is not matching\");\n\n    const tokenData = this.createToken(findUser);\n    const cookie = this.createCookie(tokenData);\n\n    return { cookie, findUser };\n  }\n\n  public async logout(userData: User): Promise<User> {\n    const findUser: User = await this.users.findFirst({ where: { email: userData.email, password: userData.password } });\n    if (!findUser) throw new HttpException(409, \"User doesn't exist\");\n\n    return findUser;\n  }\n\n  public createToken(user: User): TokenData {\n    const dataStoredInToken: DataStoredInToken = { id: user.id };\n    const secretKey: string = SECRET_KEY;\n    const expiresIn: number = 60 * 60;\n\n    return { expiresIn, token: sign(dataStoredInToken, secretKey, { expiresIn }) };\n  }\n\n  public createCookie(tokenData: TokenData): string {\n    return `Authorization=${tokenData.token}; HttpOnly; Max-Age=${tokenData.expiresIn};`;\n  }\n}\n"],"names":["AuthService","signup","userData","findUser","users","findUnique","where","email","HttpException","hashedPassword","hash","password","createUserData","create","data","login","isPasswordMatching","compare","tokenData","createToken","cookie","createCookie","logout","findFirst","user","dataStoredInToken","id","secretKey","SECRET_KEY","expiresIn","token","sign","PrismaClient","Service"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAWaA;;;eAAAA;;;wBAXgB;wBACC;8BACT;wBACG;wBACG;+BAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKvB,IAAA,AAAMA,cAAN,MAAMA;IAGX,MAAaC,OAAOC,QAAuB,EAAiB;QAC1D,MAAMC,WAAiB,MAAM,IAAI,CAACC,KAAK,CAACC,UAAU,CAAC;YAAEC,OAAO;gBAAEC,OAAOL,SAASK,KAAK;YAAC;QAAE;QACtF,IAAIJ,UAAU,MAAM,IAAIK,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEN,SAASK,KAAK,CAAC,eAAe,CAAC;QAExF,MAAME,iBAAiB,MAAMC,IAAAA,YAAI,EAACR,SAASS,QAAQ,EAAE;QACrD,MAAMC,iBAAgC,IAAI,CAACR,KAAK,CAACS,MAAM,CAAC;YAAEC,MAAM,wCAAKZ;gBAAUS,UAAUF;;QAAiB;QAE1G,OAAOG;IACT;IAEA,MAAaG,MAAMb,QAAuB,EAA+C;QACvF,MAAMC,WAAiB,MAAM,IAAI,CAACC,KAAK,CAACC,UAAU,CAAC;YAAEC,OAAO;gBAAEC,OAAOL,SAASK,KAAK;YAAC;QAAE;QACtF,IAAI,CAACJ,UAAU,MAAM,IAAIK,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEN,SAASK,KAAK,CAAC,cAAc,CAAC;QAExF,MAAMS,qBAA8B,MAAMC,IAAAA,eAAO,EAACf,SAASS,QAAQ,EAAER,SAASQ,QAAQ;QACtF,IAAI,CAACK,oBAAoB,MAAM,IAAIR,4BAAa,CAAC,KAAK;QAEtD,MAAMU,YAAY,IAAI,CAACC,WAAW,CAAChB;QACnC,MAAMiB,SAAS,IAAI,CAACC,YAAY,CAACH;QAEjC,OAAO;YAAEE;YAAQjB;QAAS;IAC5B;IAEA,MAAamB,OAAOpB,QAAc,EAAiB;QACjD,MAAMC,WAAiB,MAAM,IAAI,CAACC,KAAK,CAACmB,SAAS,CAAC;YAAEjB,OAAO;gBAAEC,OAAOL,SAASK,KAAK;gBAAEI,UAAUT,SAASS,QAAQ;YAAC;QAAE;QAClH,IAAI,CAACR,UAAU,MAAM,IAAIK,4BAAa,CAAC,KAAK;QAE5C,OAAOL;IACT;IAEOgB,YAAYK,IAAU,EAAa;QACxC,MAAMC,oBAAuC;YAAEC,IAAIF,KAAKE,EAAE;QAAC;QAC3D,MAAMC,YAAoBC,kBAAU;QACpC,MAAMC,YAAoB,KAAK;QAE/B,OAAO;YAAEA;YAAWC,OAAOC,IAAAA,kBAAI,EAACN,mBAAmBE,WAAW;gBAAEE;YAAU;QAAG;IAC/E;IAEOR,aAAaH,SAAoB,EAAU;QAChD,OAAO,CAAC,cAAc,EAAEA,UAAUY,KAAK,CAAC,oBAAoB,EAAEZ,UAAUW,SAAS,CAAC,CAAC,CAAC;IACtF;;QA1CA,uBAAOzB,SAAQ,IAAI4B,oBAAY,GAAGR,IAAI;;AA2CxC;AA5CaxB;IADZiC,IAAAA,eAAO;GACKjC"}