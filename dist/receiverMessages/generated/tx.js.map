{"version":3,"sources":["../../../src/receiverMessages/generated/tx.ts"],"sourcesContent":["/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"circle.cctp.v1\";\n\n/** TODO add comments */\nexport interface MsgUpdateOwner {\n  from: string;\n  newOwner: string;\n}\n\nexport interface MsgUpdateOwnerResponse {\n}\n\nexport interface MsgUpdateAttesterManager {\n  from: string;\n  newAttesterManager: string;\n}\n\nexport interface MsgUpdateAttesterManagerResponse {\n}\n\nexport interface MsgUpdateTokenController {\n  from: string;\n  newTokenController: string;\n}\n\nexport interface MsgUpdateTokenControllerResponse {\n}\n\nexport interface MsgUpdatePauser {\n  from: string;\n  newPauser: string;\n}\n\nexport interface MsgUpdatePauserResponse {\n}\n\nexport interface MsgAcceptOwner {\n  from: string;\n}\n\nexport interface MsgAcceptOwnerResponse {\n}\n\nexport interface MsgEnableAttester {\n  from: string;\n  attester: string;\n}\n\nexport interface MsgEnableAttesterResponse {\n}\n\nexport interface MsgDisableAttester {\n  from: string;\n  attester: string;\n}\n\nexport interface MsgDisableAttesterResponse {\n}\n\nexport interface MsgPauseBurningAndMinting {\n  from: string;\n}\n\nexport interface MsgPauseBurningAndMintingResponse {\n}\n\nexport interface MsgUnpauseBurningAndMinting {\n  from: string;\n}\n\nexport interface MsgUnpauseBurningAndMintingResponse {\n}\n\nexport interface MsgPauseSendingAndReceivingMessages {\n  from: string;\n}\n\nexport interface MsgPauseSendingAndReceivingMessagesResponse {\n}\n\nexport interface MsgUnpauseSendingAndReceivingMessages {\n  from: string;\n}\n\nexport interface MsgUnpauseSendingAndReceivingMessagesResponse {\n}\n\nexport interface MsgUpdateMaxMessageBodySize {\n  from: string;\n  messageSize: Long;\n}\n\nexport interface MsgUpdateMaxMessageBodySizeResponse {\n}\n\nexport interface MsgSetMaxBurnAmountPerMessage {\n  from: string;\n  localToken: string;\n  amount: string;\n}\n\nexport interface MsgSetMaxBurnAmountPerMessageResponse {\n}\n\nexport interface MsgDepositForBurn {\n  from: string;\n  amount: string;\n  destinationDomain: number;\n  mintRecipient: Uint8Array;\n  burnToken: string;\n}\n\nexport interface MsgDepositForBurnResponse {\n  nonce: Long;\n}\n\nexport interface MsgDepositForBurnWithCaller {\n  from: string;\n  amount: string;\n  destinationDomain: number;\n  mintRecipient: Uint8Array;\n  burnToken: string;\n  destinationCaller: Uint8Array;\n}\n\nexport interface MsgDepositForBurnWithCallerResponse {\n  nonce: Long;\n}\n\nexport interface MsgReplaceDepositForBurn {\n  from: string;\n  originalMessage: Uint8Array;\n  originalAttestation: Uint8Array;\n  newDestinationCaller: Uint8Array;\n  newMintRecipient: Uint8Array;\n}\n\nexport interface MsgReplaceDepositForBurnResponse {\n}\n\nexport interface MsgReceiveMessage {\n  from: string;\n  message: Uint8Array;\n  attestation: Uint8Array;\n}\n\nexport interface MsgReceiveMessageResponse {\n  success: boolean;\n}\n\nexport interface MsgSendMessage {\n  from: string;\n  destinationDomain: number;\n  recipient: Uint8Array;\n  messageBody: Uint8Array;\n}\n\nexport interface MsgSendMessageResponse {\n  nonce: Long;\n}\n\nexport interface MsgSendMessageWithCaller {\n  from: string;\n  destinationDomain: number;\n  recipient: Uint8Array;\n  messageBody: Uint8Array;\n  destinationCaller: Uint8Array;\n}\n\nexport interface MsgSendMessageWithCallerResponse {\n  nonce: Long;\n}\n\nexport interface MsgReplaceMessage {\n  from: string;\n  originalMessage: Uint8Array;\n  originalAttestation: Uint8Array;\n  newMessageBody: Uint8Array;\n  newDestinationCaller: Uint8Array;\n}\n\nexport interface MsgReplaceMessageResponse {\n}\n\nexport interface MsgUpdateSignatureThreshold {\n  from: string;\n  amount: number;\n}\n\nexport interface MsgUpdateSignatureThresholdResponse {\n}\n\nexport interface MsgLinkTokenPair {\n  from: string;\n  remoteDomain: number;\n  remoteToken: Uint8Array;\n  localToken: string;\n}\n\nexport interface MsgLinkTokenPairResponse {\n}\n\nexport interface MsgUnlinkTokenPair {\n  from: string;\n  remoteDomain: number;\n  remoteToken: Uint8Array;\n  localToken: string;\n}\n\nexport interface MsgUnlinkTokenPairResponse {\n}\n\nexport interface MsgAddRemoteTokenMessenger {\n  from: string;\n  domainId: number;\n  address: Uint8Array;\n}\n\nexport interface MsgAddRemoteTokenMessengerResponse {\n}\n\nexport interface MsgRemoveRemoteTokenMessenger {\n  from: string;\n  domainId: number;\n}\n\nexport interface MsgRemoveRemoteTokenMessengerResponse {\n}\n\nfunction createBaseMsgUpdateOwner(): MsgUpdateOwner {\n  return { from: \"\", newOwner: \"\" };\n}\n\nexport const MsgUpdateOwner = {\n  encode(message: MsgUpdateOwner, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.newOwner !== \"\") {\n      writer.uint32(18).string(message.newOwner);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateOwner {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateOwner();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.newOwner = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateOwner {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      newOwner: isSet(object.newOwner) ? globalThis.String(object.newOwner) : \"\",\n    };\n  },\n\n  toJSON(message: MsgUpdateOwner): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.newOwner !== \"\") {\n      obj.newOwner = message.newOwner;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUpdateOwner>, I>>(base?: I): MsgUpdateOwner {\n    return MsgUpdateOwner.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUpdateOwner>, I>>(object: I): MsgUpdateOwner {\n    const message = createBaseMsgUpdateOwner();\n    message.from = object.from ?? \"\";\n    message.newOwner = object.newOwner ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateOwnerResponse(): MsgUpdateOwnerResponse {\n  return {};\n}\n\nexport const MsgUpdateOwnerResponse = {\n  encode(_: MsgUpdateOwnerResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateOwnerResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateOwnerResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateOwnerResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateOwnerResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUpdateOwnerResponse>, I>>(base?: I): MsgUpdateOwnerResponse {\n    return MsgUpdateOwnerResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUpdateOwnerResponse>, I>>(_: I): MsgUpdateOwnerResponse {\n    const message = createBaseMsgUpdateOwnerResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateAttesterManager(): MsgUpdateAttesterManager {\n  return { from: \"\", newAttesterManager: \"\" };\n}\n\nexport const MsgUpdateAttesterManager = {\n  encode(message: MsgUpdateAttesterManager, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.newAttesterManager !== \"\") {\n      writer.uint32(18).string(message.newAttesterManager);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateAttesterManager {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateAttesterManager();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.newAttesterManager = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateAttesterManager {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      newAttesterManager: isSet(object.newAttesterManager) ? globalThis.String(object.newAttesterManager) : \"\",\n    };\n  },\n\n  toJSON(message: MsgUpdateAttesterManager): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.newAttesterManager !== \"\") {\n      obj.newAttesterManager = message.newAttesterManager;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUpdateAttesterManager>, I>>(base?: I): MsgUpdateAttesterManager {\n    return MsgUpdateAttesterManager.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUpdateAttesterManager>, I>>(object: I): MsgUpdateAttesterManager {\n    const message = createBaseMsgUpdateAttesterManager();\n    message.from = object.from ?? \"\";\n    message.newAttesterManager = object.newAttesterManager ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateAttesterManagerResponse(): MsgUpdateAttesterManagerResponse {\n  return {};\n}\n\nexport const MsgUpdateAttesterManagerResponse = {\n  encode(_: MsgUpdateAttesterManagerResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateAttesterManagerResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateAttesterManagerResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateAttesterManagerResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateAttesterManagerResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUpdateAttesterManagerResponse>, I>>(\n    base?: I,\n  ): MsgUpdateAttesterManagerResponse {\n    return MsgUpdateAttesterManagerResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUpdateAttesterManagerResponse>, I>>(\n    _: I,\n  ): MsgUpdateAttesterManagerResponse {\n    const message = createBaseMsgUpdateAttesterManagerResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateTokenController(): MsgUpdateTokenController {\n  return { from: \"\", newTokenController: \"\" };\n}\n\nexport const MsgUpdateTokenController = {\n  encode(message: MsgUpdateTokenController, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.newTokenController !== \"\") {\n      writer.uint32(18).string(message.newTokenController);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateTokenController {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateTokenController();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.newTokenController = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateTokenController {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      newTokenController: isSet(object.newTokenController) ? globalThis.String(object.newTokenController) : \"\",\n    };\n  },\n\n  toJSON(message: MsgUpdateTokenController): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.newTokenController !== \"\") {\n      obj.newTokenController = message.newTokenController;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUpdateTokenController>, I>>(base?: I): MsgUpdateTokenController {\n    return MsgUpdateTokenController.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUpdateTokenController>, I>>(object: I): MsgUpdateTokenController {\n    const message = createBaseMsgUpdateTokenController();\n    message.from = object.from ?? \"\";\n    message.newTokenController = object.newTokenController ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateTokenControllerResponse(): MsgUpdateTokenControllerResponse {\n  return {};\n}\n\nexport const MsgUpdateTokenControllerResponse = {\n  encode(_: MsgUpdateTokenControllerResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateTokenControllerResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateTokenControllerResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateTokenControllerResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateTokenControllerResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUpdateTokenControllerResponse>, I>>(\n    base?: I,\n  ): MsgUpdateTokenControllerResponse {\n    return MsgUpdateTokenControllerResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUpdateTokenControllerResponse>, I>>(\n    _: I,\n  ): MsgUpdateTokenControllerResponse {\n    const message = createBaseMsgUpdateTokenControllerResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdatePauser(): MsgUpdatePauser {\n  return { from: \"\", newPauser: \"\" };\n}\n\nexport const MsgUpdatePauser = {\n  encode(message: MsgUpdatePauser, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.newPauser !== \"\") {\n      writer.uint32(18).string(message.newPauser);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdatePauser {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdatePauser();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.newPauser = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdatePauser {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      newPauser: isSet(object.newPauser) ? globalThis.String(object.newPauser) : \"\",\n    };\n  },\n\n  toJSON(message: MsgUpdatePauser): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.newPauser !== \"\") {\n      obj.newPauser = message.newPauser;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUpdatePauser>, I>>(base?: I): MsgUpdatePauser {\n    return MsgUpdatePauser.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUpdatePauser>, I>>(object: I): MsgUpdatePauser {\n    const message = createBaseMsgUpdatePauser();\n    message.from = object.from ?? \"\";\n    message.newPauser = object.newPauser ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdatePauserResponse(): MsgUpdatePauserResponse {\n  return {};\n}\n\nexport const MsgUpdatePauserResponse = {\n  encode(_: MsgUpdatePauserResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdatePauserResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdatePauserResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdatePauserResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdatePauserResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUpdatePauserResponse>, I>>(base?: I): MsgUpdatePauserResponse {\n    return MsgUpdatePauserResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUpdatePauserResponse>, I>>(_: I): MsgUpdatePauserResponse {\n    const message = createBaseMsgUpdatePauserResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgAcceptOwner(): MsgAcceptOwner {\n  return { from: \"\" };\n}\n\nexport const MsgAcceptOwner = {\n  encode(message: MsgAcceptOwner, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgAcceptOwner {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgAcceptOwner();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgAcceptOwner {\n    return { from: isSet(object.from) ? globalThis.String(object.from) : \"\" };\n  },\n\n  toJSON(message: MsgAcceptOwner): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgAcceptOwner>, I>>(base?: I): MsgAcceptOwner {\n    return MsgAcceptOwner.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgAcceptOwner>, I>>(object: I): MsgAcceptOwner {\n    const message = createBaseMsgAcceptOwner();\n    message.from = object.from ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgAcceptOwnerResponse(): MsgAcceptOwnerResponse {\n  return {};\n}\n\nexport const MsgAcceptOwnerResponse = {\n  encode(_: MsgAcceptOwnerResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgAcceptOwnerResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgAcceptOwnerResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgAcceptOwnerResponse {\n    return {};\n  },\n\n  toJSON(_: MsgAcceptOwnerResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgAcceptOwnerResponse>, I>>(base?: I): MsgAcceptOwnerResponse {\n    return MsgAcceptOwnerResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgAcceptOwnerResponse>, I>>(_: I): MsgAcceptOwnerResponse {\n    const message = createBaseMsgAcceptOwnerResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgEnableAttester(): MsgEnableAttester {\n  return { from: \"\", attester: \"\" };\n}\n\nexport const MsgEnableAttester = {\n  encode(message: MsgEnableAttester, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.attester !== \"\") {\n      writer.uint32(18).string(message.attester);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgEnableAttester {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgEnableAttester();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.attester = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgEnableAttester {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      attester: isSet(object.attester) ? globalThis.String(object.attester) : \"\",\n    };\n  },\n\n  toJSON(message: MsgEnableAttester): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.attester !== \"\") {\n      obj.attester = message.attester;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgEnableAttester>, I>>(base?: I): MsgEnableAttester {\n    return MsgEnableAttester.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgEnableAttester>, I>>(object: I): MsgEnableAttester {\n    const message = createBaseMsgEnableAttester();\n    message.from = object.from ?? \"\";\n    message.attester = object.attester ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgEnableAttesterResponse(): MsgEnableAttesterResponse {\n  return {};\n}\n\nexport const MsgEnableAttesterResponse = {\n  encode(_: MsgEnableAttesterResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgEnableAttesterResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgEnableAttesterResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgEnableAttesterResponse {\n    return {};\n  },\n\n  toJSON(_: MsgEnableAttesterResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgEnableAttesterResponse>, I>>(base?: I): MsgEnableAttesterResponse {\n    return MsgEnableAttesterResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgEnableAttesterResponse>, I>>(_: I): MsgEnableAttesterResponse {\n    const message = createBaseMsgEnableAttesterResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgDisableAttester(): MsgDisableAttester {\n  return { from: \"\", attester: \"\" };\n}\n\nexport const MsgDisableAttester = {\n  encode(message: MsgDisableAttester, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.attester !== \"\") {\n      writer.uint32(18).string(message.attester);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgDisableAttester {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgDisableAttester();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.attester = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgDisableAttester {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      attester: isSet(object.attester) ? globalThis.String(object.attester) : \"\",\n    };\n  },\n\n  toJSON(message: MsgDisableAttester): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.attester !== \"\") {\n      obj.attester = message.attester;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgDisableAttester>, I>>(base?: I): MsgDisableAttester {\n    return MsgDisableAttester.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgDisableAttester>, I>>(object: I): MsgDisableAttester {\n    const message = createBaseMsgDisableAttester();\n    message.from = object.from ?? \"\";\n    message.attester = object.attester ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgDisableAttesterResponse(): MsgDisableAttesterResponse {\n  return {};\n}\n\nexport const MsgDisableAttesterResponse = {\n  encode(_: MsgDisableAttesterResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgDisableAttesterResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgDisableAttesterResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgDisableAttesterResponse {\n    return {};\n  },\n\n  toJSON(_: MsgDisableAttesterResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgDisableAttesterResponse>, I>>(base?: I): MsgDisableAttesterResponse {\n    return MsgDisableAttesterResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgDisableAttesterResponse>, I>>(_: I): MsgDisableAttesterResponse {\n    const message = createBaseMsgDisableAttesterResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgPauseBurningAndMinting(): MsgPauseBurningAndMinting {\n  return { from: \"\" };\n}\n\nexport const MsgPauseBurningAndMinting = {\n  encode(message: MsgPauseBurningAndMinting, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgPauseBurningAndMinting {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgPauseBurningAndMinting();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgPauseBurningAndMinting {\n    return { from: isSet(object.from) ? globalThis.String(object.from) : \"\" };\n  },\n\n  toJSON(message: MsgPauseBurningAndMinting): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgPauseBurningAndMinting>, I>>(base?: I): MsgPauseBurningAndMinting {\n    return MsgPauseBurningAndMinting.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgPauseBurningAndMinting>, I>>(object: I): MsgPauseBurningAndMinting {\n    const message = createBaseMsgPauseBurningAndMinting();\n    message.from = object.from ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgPauseBurningAndMintingResponse(): MsgPauseBurningAndMintingResponse {\n  return {};\n}\n\nexport const MsgPauseBurningAndMintingResponse = {\n  encode(_: MsgPauseBurningAndMintingResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgPauseBurningAndMintingResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgPauseBurningAndMintingResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgPauseBurningAndMintingResponse {\n    return {};\n  },\n\n  toJSON(_: MsgPauseBurningAndMintingResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgPauseBurningAndMintingResponse>, I>>(\n    base?: I,\n  ): MsgPauseBurningAndMintingResponse {\n    return MsgPauseBurningAndMintingResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgPauseBurningAndMintingResponse>, I>>(\n    _: I,\n  ): MsgPauseBurningAndMintingResponse {\n    const message = createBaseMsgPauseBurningAndMintingResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUnpauseBurningAndMinting(): MsgUnpauseBurningAndMinting {\n  return { from: \"\" };\n}\n\nexport const MsgUnpauseBurningAndMinting = {\n  encode(message: MsgUnpauseBurningAndMinting, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUnpauseBurningAndMinting {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUnpauseBurningAndMinting();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUnpauseBurningAndMinting {\n    return { from: isSet(object.from) ? globalThis.String(object.from) : \"\" };\n  },\n\n  toJSON(message: MsgUnpauseBurningAndMinting): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUnpauseBurningAndMinting>, I>>(base?: I): MsgUnpauseBurningAndMinting {\n    return MsgUnpauseBurningAndMinting.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUnpauseBurningAndMinting>, I>>(object: I): MsgUnpauseBurningAndMinting {\n    const message = createBaseMsgUnpauseBurningAndMinting();\n    message.from = object.from ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgUnpauseBurningAndMintingResponse(): MsgUnpauseBurningAndMintingResponse {\n  return {};\n}\n\nexport const MsgUnpauseBurningAndMintingResponse = {\n  encode(_: MsgUnpauseBurningAndMintingResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUnpauseBurningAndMintingResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUnpauseBurningAndMintingResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUnpauseBurningAndMintingResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUnpauseBurningAndMintingResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUnpauseBurningAndMintingResponse>, I>>(\n    base?: I,\n  ): MsgUnpauseBurningAndMintingResponse {\n    return MsgUnpauseBurningAndMintingResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUnpauseBurningAndMintingResponse>, I>>(\n    _: I,\n  ): MsgUnpauseBurningAndMintingResponse {\n    const message = createBaseMsgUnpauseBurningAndMintingResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgPauseSendingAndReceivingMessages(): MsgPauseSendingAndReceivingMessages {\n  return { from: \"\" };\n}\n\nexport const MsgPauseSendingAndReceivingMessages = {\n  encode(message: MsgPauseSendingAndReceivingMessages, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgPauseSendingAndReceivingMessages {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgPauseSendingAndReceivingMessages();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgPauseSendingAndReceivingMessages {\n    return { from: isSet(object.from) ? globalThis.String(object.from) : \"\" };\n  },\n\n  toJSON(message: MsgPauseSendingAndReceivingMessages): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgPauseSendingAndReceivingMessages>, I>>(\n    base?: I,\n  ): MsgPauseSendingAndReceivingMessages {\n    return MsgPauseSendingAndReceivingMessages.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgPauseSendingAndReceivingMessages>, I>>(\n    object: I,\n  ): MsgPauseSendingAndReceivingMessages {\n    const message = createBaseMsgPauseSendingAndReceivingMessages();\n    message.from = object.from ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgPauseSendingAndReceivingMessagesResponse(): MsgPauseSendingAndReceivingMessagesResponse {\n  return {};\n}\n\nexport const MsgPauseSendingAndReceivingMessagesResponse = {\n  encode(_: MsgPauseSendingAndReceivingMessagesResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgPauseSendingAndReceivingMessagesResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgPauseSendingAndReceivingMessagesResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgPauseSendingAndReceivingMessagesResponse {\n    return {};\n  },\n\n  toJSON(_: MsgPauseSendingAndReceivingMessagesResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgPauseSendingAndReceivingMessagesResponse>, I>>(\n    base?: I,\n  ): MsgPauseSendingAndReceivingMessagesResponse {\n    return MsgPauseSendingAndReceivingMessagesResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgPauseSendingAndReceivingMessagesResponse>, I>>(\n    _: I,\n  ): MsgPauseSendingAndReceivingMessagesResponse {\n    const message = createBaseMsgPauseSendingAndReceivingMessagesResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUnpauseSendingAndReceivingMessages(): MsgUnpauseSendingAndReceivingMessages {\n  return { from: \"\" };\n}\n\nexport const MsgUnpauseSendingAndReceivingMessages = {\n  encode(message: MsgUnpauseSendingAndReceivingMessages, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUnpauseSendingAndReceivingMessages {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUnpauseSendingAndReceivingMessages();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUnpauseSendingAndReceivingMessages {\n    return { from: isSet(object.from) ? globalThis.String(object.from) : \"\" };\n  },\n\n  toJSON(message: MsgUnpauseSendingAndReceivingMessages): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUnpauseSendingAndReceivingMessages>, I>>(\n    base?: I,\n  ): MsgUnpauseSendingAndReceivingMessages {\n    return MsgUnpauseSendingAndReceivingMessages.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUnpauseSendingAndReceivingMessages>, I>>(\n    object: I,\n  ): MsgUnpauseSendingAndReceivingMessages {\n    const message = createBaseMsgUnpauseSendingAndReceivingMessages();\n    message.from = object.from ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgUnpauseSendingAndReceivingMessagesResponse(): MsgUnpauseSendingAndReceivingMessagesResponse {\n  return {};\n}\n\nexport const MsgUnpauseSendingAndReceivingMessagesResponse = {\n  encode(_: MsgUnpauseSendingAndReceivingMessagesResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUnpauseSendingAndReceivingMessagesResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUnpauseSendingAndReceivingMessagesResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUnpauseSendingAndReceivingMessagesResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUnpauseSendingAndReceivingMessagesResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUnpauseSendingAndReceivingMessagesResponse>, I>>(\n    base?: I,\n  ): MsgUnpauseSendingAndReceivingMessagesResponse {\n    return MsgUnpauseSendingAndReceivingMessagesResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUnpauseSendingAndReceivingMessagesResponse>, I>>(\n    _: I,\n  ): MsgUnpauseSendingAndReceivingMessagesResponse {\n    const message = createBaseMsgUnpauseSendingAndReceivingMessagesResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateMaxMessageBodySize(): MsgUpdateMaxMessageBodySize {\n  return { from: \"\", messageSize: Long.UZERO };\n}\n\nexport const MsgUpdateMaxMessageBodySize = {\n  encode(message: MsgUpdateMaxMessageBodySize, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (!message.messageSize.isZero()) {\n      writer.uint32(16).uint64(message.messageSize);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateMaxMessageBodySize {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateMaxMessageBodySize();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.messageSize = reader.uint64() as Long;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateMaxMessageBodySize {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      messageSize: isSet(object.messageSize) ? Long.fromValue(object.messageSize) : Long.UZERO,\n    };\n  },\n\n  toJSON(message: MsgUpdateMaxMessageBodySize): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (!message.messageSize.isZero()) {\n      obj.messageSize = (message.messageSize || Long.UZERO).toString();\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUpdateMaxMessageBodySize>, I>>(base?: I): MsgUpdateMaxMessageBodySize {\n    return MsgUpdateMaxMessageBodySize.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUpdateMaxMessageBodySize>, I>>(object: I): MsgUpdateMaxMessageBodySize {\n    const message = createBaseMsgUpdateMaxMessageBodySize();\n    message.from = object.from ?? \"\";\n    message.messageSize = (object.messageSize !== undefined && object.messageSize !== null)\n      ? Long.fromValue(object.messageSize)\n      : Long.UZERO;\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateMaxMessageBodySizeResponse(): MsgUpdateMaxMessageBodySizeResponse {\n  return {};\n}\n\nexport const MsgUpdateMaxMessageBodySizeResponse = {\n  encode(_: MsgUpdateMaxMessageBodySizeResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateMaxMessageBodySizeResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateMaxMessageBodySizeResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateMaxMessageBodySizeResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateMaxMessageBodySizeResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUpdateMaxMessageBodySizeResponse>, I>>(\n    base?: I,\n  ): MsgUpdateMaxMessageBodySizeResponse {\n    return MsgUpdateMaxMessageBodySizeResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUpdateMaxMessageBodySizeResponse>, I>>(\n    _: I,\n  ): MsgUpdateMaxMessageBodySizeResponse {\n    const message = createBaseMsgUpdateMaxMessageBodySizeResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgSetMaxBurnAmountPerMessage(): MsgSetMaxBurnAmountPerMessage {\n  return { from: \"\", localToken: \"\", amount: \"\" };\n}\n\nexport const MsgSetMaxBurnAmountPerMessage = {\n  encode(message: MsgSetMaxBurnAmountPerMessage, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.localToken !== \"\") {\n      writer.uint32(18).string(message.localToken);\n    }\n    if (message.amount !== \"\") {\n      writer.uint32(26).string(message.amount);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSetMaxBurnAmountPerMessage {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSetMaxBurnAmountPerMessage();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.localToken = reader.string();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.amount = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgSetMaxBurnAmountPerMessage {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      localToken: isSet(object.localToken) ? globalThis.String(object.localToken) : \"\",\n      amount: isSet(object.amount) ? globalThis.String(object.amount) : \"\",\n    };\n  },\n\n  toJSON(message: MsgSetMaxBurnAmountPerMessage): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.localToken !== \"\") {\n      obj.localToken = message.localToken;\n    }\n    if (message.amount !== \"\") {\n      obj.amount = message.amount;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgSetMaxBurnAmountPerMessage>, I>>(base?: I): MsgSetMaxBurnAmountPerMessage {\n    return MsgSetMaxBurnAmountPerMessage.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgSetMaxBurnAmountPerMessage>, I>>(\n    object: I,\n  ): MsgSetMaxBurnAmountPerMessage {\n    const message = createBaseMsgSetMaxBurnAmountPerMessage();\n    message.from = object.from ?? \"\";\n    message.localToken = object.localToken ?? \"\";\n    message.amount = object.amount ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgSetMaxBurnAmountPerMessageResponse(): MsgSetMaxBurnAmountPerMessageResponse {\n  return {};\n}\n\nexport const MsgSetMaxBurnAmountPerMessageResponse = {\n  encode(_: MsgSetMaxBurnAmountPerMessageResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSetMaxBurnAmountPerMessageResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSetMaxBurnAmountPerMessageResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgSetMaxBurnAmountPerMessageResponse {\n    return {};\n  },\n\n  toJSON(_: MsgSetMaxBurnAmountPerMessageResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgSetMaxBurnAmountPerMessageResponse>, I>>(\n    base?: I,\n  ): MsgSetMaxBurnAmountPerMessageResponse {\n    return MsgSetMaxBurnAmountPerMessageResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgSetMaxBurnAmountPerMessageResponse>, I>>(\n    _: I,\n  ): MsgSetMaxBurnAmountPerMessageResponse {\n    const message = createBaseMsgSetMaxBurnAmountPerMessageResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgDepositForBurn(): MsgDepositForBurn {\n  return { from: \"\", amount: \"\", destinationDomain: 0, mintRecipient: new Uint8Array(0), burnToken: \"\" };\n}\n\nexport const MsgDepositForBurn = {\n  encode(message: MsgDepositForBurn, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.amount !== \"\") {\n      writer.uint32(18).string(message.amount);\n    }\n    if (message.destinationDomain !== 0) {\n      writer.uint32(24).uint32(message.destinationDomain);\n    }\n    if (message.mintRecipient.length !== 0) {\n      writer.uint32(34).bytes(message.mintRecipient);\n    }\n    if (message.burnToken !== \"\") {\n      writer.uint32(42).string(message.burnToken);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgDepositForBurn {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgDepositForBurn();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.amount = reader.string();\n          continue;\n        case 3:\n          if (tag !== 24) {\n            break;\n          }\n\n          message.destinationDomain = reader.uint32();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.mintRecipient = reader.bytes();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.burnToken = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgDepositForBurn {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      amount: isSet(object.amount) ? globalThis.String(object.amount) : \"\",\n      destinationDomain: isSet(object.destinationDomain) ? globalThis.Number(object.destinationDomain) : 0,\n      mintRecipient: isSet(object.mintRecipient) ? bytesFromBase64(object.mintRecipient) : new Uint8Array(0),\n      burnToken: isSet(object.burnToken) ? globalThis.String(object.burnToken) : \"\",\n    };\n  },\n\n  toJSON(message: MsgDepositForBurn): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.amount !== \"\") {\n      obj.amount = message.amount;\n    }\n    if (message.destinationDomain !== 0) {\n      obj.destinationDomain = Math.round(message.destinationDomain);\n    }\n    if (message.mintRecipient.length !== 0) {\n      obj.mintRecipient = base64FromBytes(message.mintRecipient);\n    }\n    if (message.burnToken !== \"\") {\n      obj.burnToken = message.burnToken;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgDepositForBurn>, I>>(base?: I): MsgDepositForBurn {\n    return MsgDepositForBurn.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgDepositForBurn>, I>>(object: I): MsgDepositForBurn {\n    const message = createBaseMsgDepositForBurn();\n    message.from = object.from ?? \"\";\n    message.amount = object.amount ?? \"\";\n    message.destinationDomain = object.destinationDomain ?? 0;\n    message.mintRecipient = object.mintRecipient ?? new Uint8Array(0);\n    message.burnToken = object.burnToken ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgDepositForBurnResponse(): MsgDepositForBurnResponse {\n  return { nonce: Long.UZERO };\n}\n\nexport const MsgDepositForBurnResponse = {\n  encode(message: MsgDepositForBurnResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (!message.nonce.isZero()) {\n      writer.uint32(8).uint64(message.nonce);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgDepositForBurnResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgDepositForBurnResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.nonce = reader.uint64() as Long;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgDepositForBurnResponse {\n    return { nonce: isSet(object.nonce) ? Long.fromValue(object.nonce) : Long.UZERO };\n  },\n\n  toJSON(message: MsgDepositForBurnResponse): unknown {\n    const obj: any = {};\n    if (!message.nonce.isZero()) {\n      obj.nonce = (message.nonce || Long.UZERO).toString();\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgDepositForBurnResponse>, I>>(base?: I): MsgDepositForBurnResponse {\n    return MsgDepositForBurnResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgDepositForBurnResponse>, I>>(object: I): MsgDepositForBurnResponse {\n    const message = createBaseMsgDepositForBurnResponse();\n    message.nonce = (object.nonce !== undefined && object.nonce !== null) ? Long.fromValue(object.nonce) : Long.UZERO;\n    return message;\n  },\n};\n\nfunction createBaseMsgDepositForBurnWithCaller(): MsgDepositForBurnWithCaller {\n  return {\n    from: \"\",\n    amount: \"\",\n    destinationDomain: 0,\n    mintRecipient: new Uint8Array(0),\n    burnToken: \"\",\n    destinationCaller: new Uint8Array(0),\n  };\n}\n\nexport const MsgDepositForBurnWithCaller = {\n  encode(message: MsgDepositForBurnWithCaller, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.amount !== \"\") {\n      writer.uint32(18).string(message.amount);\n    }\n    if (message.destinationDomain !== 0) {\n      writer.uint32(24).uint32(message.destinationDomain);\n    }\n    if (message.mintRecipient.length !== 0) {\n      writer.uint32(34).bytes(message.mintRecipient);\n    }\n    if (message.burnToken !== \"\") {\n      writer.uint32(42).string(message.burnToken);\n    }\n    if (message.destinationCaller.length !== 0) {\n      writer.uint32(50).bytes(message.destinationCaller);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgDepositForBurnWithCaller {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgDepositForBurnWithCaller();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.amount = reader.string();\n          continue;\n        case 3:\n          if (tag !== 24) {\n            break;\n          }\n\n          message.destinationDomain = reader.uint32();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.mintRecipient = reader.bytes();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.burnToken = reader.string();\n          continue;\n        case 6:\n          if (tag !== 50) {\n            break;\n          }\n\n          message.destinationCaller = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgDepositForBurnWithCaller {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      amount: isSet(object.amount) ? globalThis.String(object.amount) : \"\",\n      destinationDomain: isSet(object.destinationDomain) ? globalThis.Number(object.destinationDomain) : 0,\n      mintRecipient: isSet(object.mintRecipient) ? bytesFromBase64(object.mintRecipient) : new Uint8Array(0),\n      burnToken: isSet(object.burnToken) ? globalThis.String(object.burnToken) : \"\",\n      destinationCaller: isSet(object.destinationCaller)\n        ? bytesFromBase64(object.destinationCaller)\n        : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgDepositForBurnWithCaller): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.amount !== \"\") {\n      obj.amount = message.amount;\n    }\n    if (message.destinationDomain !== 0) {\n      obj.destinationDomain = Math.round(message.destinationDomain);\n    }\n    if (message.mintRecipient.length !== 0) {\n      obj.mintRecipient = base64FromBytes(message.mintRecipient);\n    }\n    if (message.burnToken !== \"\") {\n      obj.burnToken = message.burnToken;\n    }\n    if (message.destinationCaller.length !== 0) {\n      obj.destinationCaller = base64FromBytes(message.destinationCaller);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgDepositForBurnWithCaller>, I>>(base?: I): MsgDepositForBurnWithCaller {\n    return MsgDepositForBurnWithCaller.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgDepositForBurnWithCaller>, I>>(object: I): MsgDepositForBurnWithCaller {\n    const message = createBaseMsgDepositForBurnWithCaller();\n    message.from = object.from ?? \"\";\n    message.amount = object.amount ?? \"\";\n    message.destinationDomain = object.destinationDomain ?? 0;\n    message.mintRecipient = object.mintRecipient ?? new Uint8Array(0);\n    message.burnToken = object.burnToken ?? \"\";\n    message.destinationCaller = object.destinationCaller ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgDepositForBurnWithCallerResponse(): MsgDepositForBurnWithCallerResponse {\n  return { nonce: Long.UZERO };\n}\n\nexport const MsgDepositForBurnWithCallerResponse = {\n  encode(message: MsgDepositForBurnWithCallerResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (!message.nonce.isZero()) {\n      writer.uint32(8).uint64(message.nonce);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgDepositForBurnWithCallerResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgDepositForBurnWithCallerResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.nonce = reader.uint64() as Long;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgDepositForBurnWithCallerResponse {\n    return { nonce: isSet(object.nonce) ? Long.fromValue(object.nonce) : Long.UZERO };\n  },\n\n  toJSON(message: MsgDepositForBurnWithCallerResponse): unknown {\n    const obj: any = {};\n    if (!message.nonce.isZero()) {\n      obj.nonce = (message.nonce || Long.UZERO).toString();\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgDepositForBurnWithCallerResponse>, I>>(\n    base?: I,\n  ): MsgDepositForBurnWithCallerResponse {\n    return MsgDepositForBurnWithCallerResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgDepositForBurnWithCallerResponse>, I>>(\n    object: I,\n  ): MsgDepositForBurnWithCallerResponse {\n    const message = createBaseMsgDepositForBurnWithCallerResponse();\n    message.nonce = (object.nonce !== undefined && object.nonce !== null) ? Long.fromValue(object.nonce) : Long.UZERO;\n    return message;\n  },\n};\n\nfunction createBaseMsgReplaceDepositForBurn(): MsgReplaceDepositForBurn {\n  return {\n    from: \"\",\n    originalMessage: new Uint8Array(0),\n    originalAttestation: new Uint8Array(0),\n    newDestinationCaller: new Uint8Array(0),\n    newMintRecipient: new Uint8Array(0),\n  };\n}\n\nexport const MsgReplaceDepositForBurn = {\n  encode(message: MsgReplaceDepositForBurn, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.originalMessage.length !== 0) {\n      writer.uint32(18).bytes(message.originalMessage);\n    }\n    if (message.originalAttestation.length !== 0) {\n      writer.uint32(26).bytes(message.originalAttestation);\n    }\n    if (message.newDestinationCaller.length !== 0) {\n      writer.uint32(34).bytes(message.newDestinationCaller);\n    }\n    if (message.newMintRecipient.length !== 0) {\n      writer.uint32(42).bytes(message.newMintRecipient);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgReplaceDepositForBurn {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgReplaceDepositForBurn();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.originalMessage = reader.bytes();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.originalAttestation = reader.bytes();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.newDestinationCaller = reader.bytes();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.newMintRecipient = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgReplaceDepositForBurn {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      originalMessage: isSet(object.originalMessage) ? bytesFromBase64(object.originalMessage) : new Uint8Array(0),\n      originalAttestation: isSet(object.originalAttestation)\n        ? bytesFromBase64(object.originalAttestation)\n        : new Uint8Array(0),\n      newDestinationCaller: isSet(object.newDestinationCaller)\n        ? bytesFromBase64(object.newDestinationCaller)\n        : new Uint8Array(0),\n      newMintRecipient: isSet(object.newMintRecipient) ? bytesFromBase64(object.newMintRecipient) : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgReplaceDepositForBurn): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.originalMessage.length !== 0) {\n      obj.originalMessage = base64FromBytes(message.originalMessage);\n    }\n    if (message.originalAttestation.length !== 0) {\n      obj.originalAttestation = base64FromBytes(message.originalAttestation);\n    }\n    if (message.newDestinationCaller.length !== 0) {\n      obj.newDestinationCaller = base64FromBytes(message.newDestinationCaller);\n    }\n    if (message.newMintRecipient.length !== 0) {\n      obj.newMintRecipient = base64FromBytes(message.newMintRecipient);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgReplaceDepositForBurn>, I>>(base?: I): MsgReplaceDepositForBurn {\n    return MsgReplaceDepositForBurn.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgReplaceDepositForBurn>, I>>(object: I): MsgReplaceDepositForBurn {\n    const message = createBaseMsgReplaceDepositForBurn();\n    message.from = object.from ?? \"\";\n    message.originalMessage = object.originalMessage ?? new Uint8Array(0);\n    message.originalAttestation = object.originalAttestation ?? new Uint8Array(0);\n    message.newDestinationCaller = object.newDestinationCaller ?? new Uint8Array(0);\n    message.newMintRecipient = object.newMintRecipient ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgReplaceDepositForBurnResponse(): MsgReplaceDepositForBurnResponse {\n  return {};\n}\n\nexport const MsgReplaceDepositForBurnResponse = {\n  encode(_: MsgReplaceDepositForBurnResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgReplaceDepositForBurnResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgReplaceDepositForBurnResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgReplaceDepositForBurnResponse {\n    return {};\n  },\n\n  toJSON(_: MsgReplaceDepositForBurnResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgReplaceDepositForBurnResponse>, I>>(\n    base?: I,\n  ): MsgReplaceDepositForBurnResponse {\n    return MsgReplaceDepositForBurnResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgReplaceDepositForBurnResponse>, I>>(\n    _: I,\n  ): MsgReplaceDepositForBurnResponse {\n    const message = createBaseMsgReplaceDepositForBurnResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgReceiveMessage(): MsgReceiveMessage {\n  return { from: \"\", message: new Uint8Array(0), attestation: new Uint8Array(0) };\n}\n\nexport const MsgReceiveMessage = {\n  encode(message: MsgReceiveMessage, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.message.length !== 0) {\n      writer.uint32(18).bytes(message.message);\n    }\n    if (message.attestation.length !== 0) {\n      writer.uint32(26).bytes(message.attestation);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgReceiveMessage {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgReceiveMessage();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.message = reader.bytes();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.attestation = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgReceiveMessage {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      message: isSet(object.message) ? bytesFromBase64(object.message) : new Uint8Array(0),\n      attestation: isSet(object.attestation) ? bytesFromBase64(object.attestation) : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgReceiveMessage): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.message.length !== 0) {\n      obj.message = base64FromBytes(message.message);\n    }\n    if (message.attestation.length !== 0) {\n      obj.attestation = base64FromBytes(message.attestation);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgReceiveMessage>, I>>(base?: I): MsgReceiveMessage {\n    return MsgReceiveMessage.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgReceiveMessage>, I>>(object: I): MsgReceiveMessage {\n    const message = createBaseMsgReceiveMessage();\n    message.from = object.from ?? \"\";\n    message.message = object.message ?? new Uint8Array(0);\n    message.attestation = object.attestation ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgReceiveMessageResponse(): MsgReceiveMessageResponse {\n  return { success: false };\n}\n\nexport const MsgReceiveMessageResponse = {\n  encode(message: MsgReceiveMessageResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.success === true) {\n      writer.uint32(8).bool(message.success);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgReceiveMessageResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgReceiveMessageResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.success = reader.bool();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgReceiveMessageResponse {\n    return { success: isSet(object.success) ? globalThis.Boolean(object.success) : false };\n  },\n\n  toJSON(message: MsgReceiveMessageResponse): unknown {\n    const obj: any = {};\n    if (message.success === true) {\n      obj.success = message.success;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgReceiveMessageResponse>, I>>(base?: I): MsgReceiveMessageResponse {\n    return MsgReceiveMessageResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgReceiveMessageResponse>, I>>(object: I): MsgReceiveMessageResponse {\n    const message = createBaseMsgReceiveMessageResponse();\n    message.success = object.success ?? false;\n    return message;\n  },\n};\n\nfunction createBaseMsgSendMessage(): MsgSendMessage {\n  return { from: \"\", destinationDomain: 0, recipient: new Uint8Array(0), messageBody: new Uint8Array(0) };\n}\n\nexport const MsgSendMessage = {\n  encode(message: MsgSendMessage, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.destinationDomain !== 0) {\n      writer.uint32(16).uint32(message.destinationDomain);\n    }\n    if (message.recipient.length !== 0) {\n      writer.uint32(26).bytes(message.recipient);\n    }\n    if (message.messageBody.length !== 0) {\n      writer.uint32(34).bytes(message.messageBody);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSendMessage {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSendMessage();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.destinationDomain = reader.uint32();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.recipient = reader.bytes();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.messageBody = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgSendMessage {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      destinationDomain: isSet(object.destinationDomain) ? globalThis.Number(object.destinationDomain) : 0,\n      recipient: isSet(object.recipient) ? bytesFromBase64(object.recipient) : new Uint8Array(0),\n      messageBody: isSet(object.messageBody) ? bytesFromBase64(object.messageBody) : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgSendMessage): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.destinationDomain !== 0) {\n      obj.destinationDomain = Math.round(message.destinationDomain);\n    }\n    if (message.recipient.length !== 0) {\n      obj.recipient = base64FromBytes(message.recipient);\n    }\n    if (message.messageBody.length !== 0) {\n      obj.messageBody = base64FromBytes(message.messageBody);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgSendMessage>, I>>(base?: I): MsgSendMessage {\n    return MsgSendMessage.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgSendMessage>, I>>(object: I): MsgSendMessage {\n    const message = createBaseMsgSendMessage();\n    message.from = object.from ?? \"\";\n    message.destinationDomain = object.destinationDomain ?? 0;\n    message.recipient = object.recipient ?? new Uint8Array(0);\n    message.messageBody = object.messageBody ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgSendMessageResponse(): MsgSendMessageResponse {\n  return { nonce: Long.UZERO };\n}\n\nexport const MsgSendMessageResponse = {\n  encode(message: MsgSendMessageResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (!message.nonce.isZero()) {\n      writer.uint32(8).uint64(message.nonce);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSendMessageResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSendMessageResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.nonce = reader.uint64() as Long;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgSendMessageResponse {\n    return { nonce: isSet(object.nonce) ? Long.fromValue(object.nonce) : Long.UZERO };\n  },\n\n  toJSON(message: MsgSendMessageResponse): unknown {\n    const obj: any = {};\n    if (!message.nonce.isZero()) {\n      obj.nonce = (message.nonce || Long.UZERO).toString();\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgSendMessageResponse>, I>>(base?: I): MsgSendMessageResponse {\n    return MsgSendMessageResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgSendMessageResponse>, I>>(object: I): MsgSendMessageResponse {\n    const message = createBaseMsgSendMessageResponse();\n    message.nonce = (object.nonce !== undefined && object.nonce !== null) ? Long.fromValue(object.nonce) : Long.UZERO;\n    return message;\n  },\n};\n\nfunction createBaseMsgSendMessageWithCaller(): MsgSendMessageWithCaller {\n  return {\n    from: \"\",\n    destinationDomain: 0,\n    recipient: new Uint8Array(0),\n    messageBody: new Uint8Array(0),\n    destinationCaller: new Uint8Array(0),\n  };\n}\n\nexport const MsgSendMessageWithCaller = {\n  encode(message: MsgSendMessageWithCaller, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.destinationDomain !== 0) {\n      writer.uint32(16).uint32(message.destinationDomain);\n    }\n    if (message.recipient.length !== 0) {\n      writer.uint32(26).bytes(message.recipient);\n    }\n    if (message.messageBody.length !== 0) {\n      writer.uint32(34).bytes(message.messageBody);\n    }\n    if (message.destinationCaller.length !== 0) {\n      writer.uint32(42).bytes(message.destinationCaller);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSendMessageWithCaller {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSendMessageWithCaller();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.destinationDomain = reader.uint32();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.recipient = reader.bytes();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.messageBody = reader.bytes();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.destinationCaller = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgSendMessageWithCaller {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      destinationDomain: isSet(object.destinationDomain) ? globalThis.Number(object.destinationDomain) : 0,\n      recipient: isSet(object.recipient) ? bytesFromBase64(object.recipient) : new Uint8Array(0),\n      messageBody: isSet(object.messageBody) ? bytesFromBase64(object.messageBody) : new Uint8Array(0),\n      destinationCaller: isSet(object.destinationCaller)\n        ? bytesFromBase64(object.destinationCaller)\n        : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgSendMessageWithCaller): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.destinationDomain !== 0) {\n      obj.destinationDomain = Math.round(message.destinationDomain);\n    }\n    if (message.recipient.length !== 0) {\n      obj.recipient = base64FromBytes(message.recipient);\n    }\n    if (message.messageBody.length !== 0) {\n      obj.messageBody = base64FromBytes(message.messageBody);\n    }\n    if (message.destinationCaller.length !== 0) {\n      obj.destinationCaller = base64FromBytes(message.destinationCaller);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgSendMessageWithCaller>, I>>(base?: I): MsgSendMessageWithCaller {\n    return MsgSendMessageWithCaller.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgSendMessageWithCaller>, I>>(object: I): MsgSendMessageWithCaller {\n    const message = createBaseMsgSendMessageWithCaller();\n    message.from = object.from ?? \"\";\n    message.destinationDomain = object.destinationDomain ?? 0;\n    message.recipient = object.recipient ?? new Uint8Array(0);\n    message.messageBody = object.messageBody ?? new Uint8Array(0);\n    message.destinationCaller = object.destinationCaller ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgSendMessageWithCallerResponse(): MsgSendMessageWithCallerResponse {\n  return { nonce: Long.UZERO };\n}\n\nexport const MsgSendMessageWithCallerResponse = {\n  encode(message: MsgSendMessageWithCallerResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (!message.nonce.isZero()) {\n      writer.uint32(8).uint64(message.nonce);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSendMessageWithCallerResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSendMessageWithCallerResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 8) {\n            break;\n          }\n\n          message.nonce = reader.uint64() as Long;\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgSendMessageWithCallerResponse {\n    return { nonce: isSet(object.nonce) ? Long.fromValue(object.nonce) : Long.UZERO };\n  },\n\n  toJSON(message: MsgSendMessageWithCallerResponse): unknown {\n    const obj: any = {};\n    if (!message.nonce.isZero()) {\n      obj.nonce = (message.nonce || Long.UZERO).toString();\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgSendMessageWithCallerResponse>, I>>(\n    base?: I,\n  ): MsgSendMessageWithCallerResponse {\n    return MsgSendMessageWithCallerResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgSendMessageWithCallerResponse>, I>>(\n    object: I,\n  ): MsgSendMessageWithCallerResponse {\n    const message = createBaseMsgSendMessageWithCallerResponse();\n    message.nonce = (object.nonce !== undefined && object.nonce !== null) ? Long.fromValue(object.nonce) : Long.UZERO;\n    return message;\n  },\n};\n\nfunction createBaseMsgReplaceMessage(): MsgReplaceMessage {\n  return {\n    from: \"\",\n    originalMessage: new Uint8Array(0),\n    originalAttestation: new Uint8Array(0),\n    newMessageBody: new Uint8Array(0),\n    newDestinationCaller: new Uint8Array(0),\n  };\n}\n\nexport const MsgReplaceMessage = {\n  encode(message: MsgReplaceMessage, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.originalMessage.length !== 0) {\n      writer.uint32(18).bytes(message.originalMessage);\n    }\n    if (message.originalAttestation.length !== 0) {\n      writer.uint32(26).bytes(message.originalAttestation);\n    }\n    if (message.newMessageBody.length !== 0) {\n      writer.uint32(34).bytes(message.newMessageBody);\n    }\n    if (message.newDestinationCaller.length !== 0) {\n      writer.uint32(42).bytes(message.newDestinationCaller);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgReplaceMessage {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgReplaceMessage();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 18) {\n            break;\n          }\n\n          message.originalMessage = reader.bytes();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.originalAttestation = reader.bytes();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.newMessageBody = reader.bytes();\n          continue;\n        case 5:\n          if (tag !== 42) {\n            break;\n          }\n\n          message.newDestinationCaller = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgReplaceMessage {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      originalMessage: isSet(object.originalMessage) ? bytesFromBase64(object.originalMessage) : new Uint8Array(0),\n      originalAttestation: isSet(object.originalAttestation)\n        ? bytesFromBase64(object.originalAttestation)\n        : new Uint8Array(0),\n      newMessageBody: isSet(object.newMessageBody) ? bytesFromBase64(object.newMessageBody) : new Uint8Array(0),\n      newDestinationCaller: isSet(object.newDestinationCaller)\n        ? bytesFromBase64(object.newDestinationCaller)\n        : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgReplaceMessage): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.originalMessage.length !== 0) {\n      obj.originalMessage = base64FromBytes(message.originalMessage);\n    }\n    if (message.originalAttestation.length !== 0) {\n      obj.originalAttestation = base64FromBytes(message.originalAttestation);\n    }\n    if (message.newMessageBody.length !== 0) {\n      obj.newMessageBody = base64FromBytes(message.newMessageBody);\n    }\n    if (message.newDestinationCaller.length !== 0) {\n      obj.newDestinationCaller = base64FromBytes(message.newDestinationCaller);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgReplaceMessage>, I>>(base?: I): MsgReplaceMessage {\n    return MsgReplaceMessage.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgReplaceMessage>, I>>(object: I): MsgReplaceMessage {\n    const message = createBaseMsgReplaceMessage();\n    message.from = object.from ?? \"\";\n    message.originalMessage = object.originalMessage ?? new Uint8Array(0);\n    message.originalAttestation = object.originalAttestation ?? new Uint8Array(0);\n    message.newMessageBody = object.newMessageBody ?? new Uint8Array(0);\n    message.newDestinationCaller = object.newDestinationCaller ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgReplaceMessageResponse(): MsgReplaceMessageResponse {\n  return {};\n}\n\nexport const MsgReplaceMessageResponse = {\n  encode(_: MsgReplaceMessageResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgReplaceMessageResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgReplaceMessageResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgReplaceMessageResponse {\n    return {};\n  },\n\n  toJSON(_: MsgReplaceMessageResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgReplaceMessageResponse>, I>>(base?: I): MsgReplaceMessageResponse {\n    return MsgReplaceMessageResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgReplaceMessageResponse>, I>>(_: I): MsgReplaceMessageResponse {\n    const message = createBaseMsgReplaceMessageResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateSignatureThreshold(): MsgUpdateSignatureThreshold {\n  return { from: \"\", amount: 0 };\n}\n\nexport const MsgUpdateSignatureThreshold = {\n  encode(message: MsgUpdateSignatureThreshold, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.amount !== 0) {\n      writer.uint32(16).uint32(message.amount);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateSignatureThreshold {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateSignatureThreshold();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.amount = reader.uint32();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUpdateSignatureThreshold {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      amount: isSet(object.amount) ? globalThis.Number(object.amount) : 0,\n    };\n  },\n\n  toJSON(message: MsgUpdateSignatureThreshold): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.amount !== 0) {\n      obj.amount = Math.round(message.amount);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUpdateSignatureThreshold>, I>>(base?: I): MsgUpdateSignatureThreshold {\n    return MsgUpdateSignatureThreshold.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUpdateSignatureThreshold>, I>>(object: I): MsgUpdateSignatureThreshold {\n    const message = createBaseMsgUpdateSignatureThreshold();\n    message.from = object.from ?? \"\";\n    message.amount = object.amount ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseMsgUpdateSignatureThresholdResponse(): MsgUpdateSignatureThresholdResponse {\n  return {};\n}\n\nexport const MsgUpdateSignatureThresholdResponse = {\n  encode(_: MsgUpdateSignatureThresholdResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateSignatureThresholdResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUpdateSignatureThresholdResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUpdateSignatureThresholdResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUpdateSignatureThresholdResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUpdateSignatureThresholdResponse>, I>>(\n    base?: I,\n  ): MsgUpdateSignatureThresholdResponse {\n    return MsgUpdateSignatureThresholdResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUpdateSignatureThresholdResponse>, I>>(\n    _: I,\n  ): MsgUpdateSignatureThresholdResponse {\n    const message = createBaseMsgUpdateSignatureThresholdResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgLinkTokenPair(): MsgLinkTokenPair {\n  return { from: \"\", remoteDomain: 0, remoteToken: new Uint8Array(0), localToken: \"\" };\n}\n\nexport const MsgLinkTokenPair = {\n  encode(message: MsgLinkTokenPair, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.remoteDomain !== 0) {\n      writer.uint32(16).uint32(message.remoteDomain);\n    }\n    if (message.remoteToken.length !== 0) {\n      writer.uint32(26).bytes(message.remoteToken);\n    }\n    if (message.localToken !== \"\") {\n      writer.uint32(34).string(message.localToken);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgLinkTokenPair {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgLinkTokenPair();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.remoteDomain = reader.uint32();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.remoteToken = reader.bytes();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.localToken = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgLinkTokenPair {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      remoteDomain: isSet(object.remoteDomain) ? globalThis.Number(object.remoteDomain) : 0,\n      remoteToken: isSet(object.remoteToken) ? bytesFromBase64(object.remoteToken) : new Uint8Array(0),\n      localToken: isSet(object.localToken) ? globalThis.String(object.localToken) : \"\",\n    };\n  },\n\n  toJSON(message: MsgLinkTokenPair): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.remoteDomain !== 0) {\n      obj.remoteDomain = Math.round(message.remoteDomain);\n    }\n    if (message.remoteToken.length !== 0) {\n      obj.remoteToken = base64FromBytes(message.remoteToken);\n    }\n    if (message.localToken !== \"\") {\n      obj.localToken = message.localToken;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgLinkTokenPair>, I>>(base?: I): MsgLinkTokenPair {\n    return MsgLinkTokenPair.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgLinkTokenPair>, I>>(object: I): MsgLinkTokenPair {\n    const message = createBaseMsgLinkTokenPair();\n    message.from = object.from ?? \"\";\n    message.remoteDomain = object.remoteDomain ?? 0;\n    message.remoteToken = object.remoteToken ?? new Uint8Array(0);\n    message.localToken = object.localToken ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgLinkTokenPairResponse(): MsgLinkTokenPairResponse {\n  return {};\n}\n\nexport const MsgLinkTokenPairResponse = {\n  encode(_: MsgLinkTokenPairResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgLinkTokenPairResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgLinkTokenPairResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgLinkTokenPairResponse {\n    return {};\n  },\n\n  toJSON(_: MsgLinkTokenPairResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgLinkTokenPairResponse>, I>>(base?: I): MsgLinkTokenPairResponse {\n    return MsgLinkTokenPairResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgLinkTokenPairResponse>, I>>(_: I): MsgLinkTokenPairResponse {\n    const message = createBaseMsgLinkTokenPairResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgUnlinkTokenPair(): MsgUnlinkTokenPair {\n  return { from: \"\", remoteDomain: 0, remoteToken: new Uint8Array(0), localToken: \"\" };\n}\n\nexport const MsgUnlinkTokenPair = {\n  encode(message: MsgUnlinkTokenPair, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.remoteDomain !== 0) {\n      writer.uint32(16).uint32(message.remoteDomain);\n    }\n    if (message.remoteToken.length !== 0) {\n      writer.uint32(26).bytes(message.remoteToken);\n    }\n    if (message.localToken !== \"\") {\n      writer.uint32(34).string(message.localToken);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUnlinkTokenPair {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUnlinkTokenPair();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.remoteDomain = reader.uint32();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.remoteToken = reader.bytes();\n          continue;\n        case 4:\n          if (tag !== 34) {\n            break;\n          }\n\n          message.localToken = reader.string();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgUnlinkTokenPair {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      remoteDomain: isSet(object.remoteDomain) ? globalThis.Number(object.remoteDomain) : 0,\n      remoteToken: isSet(object.remoteToken) ? bytesFromBase64(object.remoteToken) : new Uint8Array(0),\n      localToken: isSet(object.localToken) ? globalThis.String(object.localToken) : \"\",\n    };\n  },\n\n  toJSON(message: MsgUnlinkTokenPair): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.remoteDomain !== 0) {\n      obj.remoteDomain = Math.round(message.remoteDomain);\n    }\n    if (message.remoteToken.length !== 0) {\n      obj.remoteToken = base64FromBytes(message.remoteToken);\n    }\n    if (message.localToken !== \"\") {\n      obj.localToken = message.localToken;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUnlinkTokenPair>, I>>(base?: I): MsgUnlinkTokenPair {\n    return MsgUnlinkTokenPair.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUnlinkTokenPair>, I>>(object: I): MsgUnlinkTokenPair {\n    const message = createBaseMsgUnlinkTokenPair();\n    message.from = object.from ?? \"\";\n    message.remoteDomain = object.remoteDomain ?? 0;\n    message.remoteToken = object.remoteToken ?? new Uint8Array(0);\n    message.localToken = object.localToken ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgUnlinkTokenPairResponse(): MsgUnlinkTokenPairResponse {\n  return {};\n}\n\nexport const MsgUnlinkTokenPairResponse = {\n  encode(_: MsgUnlinkTokenPairResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgUnlinkTokenPairResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgUnlinkTokenPairResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgUnlinkTokenPairResponse {\n    return {};\n  },\n\n  toJSON(_: MsgUnlinkTokenPairResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgUnlinkTokenPairResponse>, I>>(base?: I): MsgUnlinkTokenPairResponse {\n    return MsgUnlinkTokenPairResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgUnlinkTokenPairResponse>, I>>(_: I): MsgUnlinkTokenPairResponse {\n    const message = createBaseMsgUnlinkTokenPairResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgAddRemoteTokenMessenger(): MsgAddRemoteTokenMessenger {\n  return { from: \"\", domainId: 0, address: new Uint8Array(0) };\n}\n\nexport const MsgAddRemoteTokenMessenger = {\n  encode(message: MsgAddRemoteTokenMessenger, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.domainId !== 0) {\n      writer.uint32(16).uint32(message.domainId);\n    }\n    if (message.address.length !== 0) {\n      writer.uint32(26).bytes(message.address);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgAddRemoteTokenMessenger {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgAddRemoteTokenMessenger();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.domainId = reader.uint32();\n          continue;\n        case 3:\n          if (tag !== 26) {\n            break;\n          }\n\n          message.address = reader.bytes();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgAddRemoteTokenMessenger {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      domainId: isSet(object.domainId) ? globalThis.Number(object.domainId) : 0,\n      address: isSet(object.address) ? bytesFromBase64(object.address) : new Uint8Array(0),\n    };\n  },\n\n  toJSON(message: MsgAddRemoteTokenMessenger): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.domainId !== 0) {\n      obj.domainId = Math.round(message.domainId);\n    }\n    if (message.address.length !== 0) {\n      obj.address = base64FromBytes(message.address);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgAddRemoteTokenMessenger>, I>>(base?: I): MsgAddRemoteTokenMessenger {\n    return MsgAddRemoteTokenMessenger.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgAddRemoteTokenMessenger>, I>>(object: I): MsgAddRemoteTokenMessenger {\n    const message = createBaseMsgAddRemoteTokenMessenger();\n    message.from = object.from ?? \"\";\n    message.domainId = object.domainId ?? 0;\n    message.address = object.address ?? new Uint8Array(0);\n    return message;\n  },\n};\n\nfunction createBaseMsgAddRemoteTokenMessengerResponse(): MsgAddRemoteTokenMessengerResponse {\n  return {};\n}\n\nexport const MsgAddRemoteTokenMessengerResponse = {\n  encode(_: MsgAddRemoteTokenMessengerResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgAddRemoteTokenMessengerResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgAddRemoteTokenMessengerResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgAddRemoteTokenMessengerResponse {\n    return {};\n  },\n\n  toJSON(_: MsgAddRemoteTokenMessengerResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgAddRemoteTokenMessengerResponse>, I>>(\n    base?: I,\n  ): MsgAddRemoteTokenMessengerResponse {\n    return MsgAddRemoteTokenMessengerResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgAddRemoteTokenMessengerResponse>, I>>(\n    _: I,\n  ): MsgAddRemoteTokenMessengerResponse {\n    const message = createBaseMsgAddRemoteTokenMessengerResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgRemoveRemoteTokenMessenger(): MsgRemoveRemoteTokenMessenger {\n  return { from: \"\", domainId: 0 };\n}\n\nexport const MsgRemoveRemoteTokenMessenger = {\n  encode(message: MsgRemoveRemoteTokenMessenger, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.from !== \"\") {\n      writer.uint32(10).string(message.from);\n    }\n    if (message.domainId !== 0) {\n      writer.uint32(16).uint32(message.domainId);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRemoveRemoteTokenMessenger {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgRemoveRemoteTokenMessenger();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag !== 10) {\n            break;\n          }\n\n          message.from = reader.string();\n          continue;\n        case 2:\n          if (tag !== 16) {\n            break;\n          }\n\n          message.domainId = reader.uint32();\n          continue;\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgRemoveRemoteTokenMessenger {\n    return {\n      from: isSet(object.from) ? globalThis.String(object.from) : \"\",\n      domainId: isSet(object.domainId) ? globalThis.Number(object.domainId) : 0,\n    };\n  },\n\n  toJSON(message: MsgRemoveRemoteTokenMessenger): unknown {\n    const obj: any = {};\n    if (message.from !== \"\") {\n      obj.from = message.from;\n    }\n    if (message.domainId !== 0) {\n      obj.domainId = Math.round(message.domainId);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgRemoveRemoteTokenMessenger>, I>>(base?: I): MsgRemoveRemoteTokenMessenger {\n    return MsgRemoveRemoteTokenMessenger.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgRemoveRemoteTokenMessenger>, I>>(\n    object: I,\n  ): MsgRemoveRemoteTokenMessenger {\n    const message = createBaseMsgRemoveRemoteTokenMessenger();\n    message.from = object.from ?? \"\";\n    message.domainId = object.domainId ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseMsgRemoveRemoteTokenMessengerResponse(): MsgRemoveRemoteTokenMessengerResponse {\n  return {};\n}\n\nexport const MsgRemoveRemoteTokenMessengerResponse = {\n  encode(_: MsgRemoveRemoteTokenMessengerResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgRemoveRemoteTokenMessengerResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgRemoveRemoteTokenMessengerResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgRemoveRemoteTokenMessengerResponse {\n    return {};\n  },\n\n  toJSON(_: MsgRemoveRemoteTokenMessengerResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MsgRemoveRemoteTokenMessengerResponse>, I>>(\n    base?: I,\n  ): MsgRemoveRemoteTokenMessengerResponse {\n    return MsgRemoveRemoteTokenMessengerResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MsgRemoveRemoteTokenMessengerResponse>, I>>(\n    _: I,\n  ): MsgRemoveRemoteTokenMessengerResponse {\n    const message = createBaseMsgRemoveRemoteTokenMessengerResponse();\n    return message;\n  },\n};\n\n/** Msg defines the Msg service. */\nexport interface Msg {\n  AcceptOwner(request: MsgAcceptOwner): Promise<MsgAcceptOwnerResponse>;\n  AddRemoteTokenMessenger(request: MsgAddRemoteTokenMessenger): Promise<MsgAddRemoteTokenMessengerResponse>;\n  DepositForBurn(request: MsgDepositForBurn): Promise<MsgDepositForBurnResponse>;\n  DepositForBurnWithCaller(request: MsgDepositForBurnWithCaller): Promise<MsgDepositForBurnWithCallerResponse>;\n  DisableAttester(request: MsgDisableAttester): Promise<MsgDisableAttesterResponse>;\n  EnableAttester(request: MsgEnableAttester): Promise<MsgEnableAttesterResponse>;\n  LinkTokenPair(request: MsgLinkTokenPair): Promise<MsgLinkTokenPairResponse>;\n  PauseBurningAndMinting(request: MsgPauseBurningAndMinting): Promise<MsgPauseBurningAndMintingResponse>;\n  PauseSendingAndReceivingMessages(\n    request: MsgPauseSendingAndReceivingMessages,\n  ): Promise<MsgPauseSendingAndReceivingMessagesResponse>;\n  ReceiveMessage(request: MsgReceiveMessage): Promise<MsgReceiveMessageResponse>;\n  RemoveRemoteTokenMessenger(request: MsgRemoveRemoteTokenMessenger): Promise<MsgRemoveRemoteTokenMessengerResponse>;\n  ReplaceDepositForBurn(request: MsgReplaceDepositForBurn): Promise<MsgReplaceDepositForBurnResponse>;\n  ReplaceMessage(request: MsgReplaceMessage): Promise<MsgReplaceMessageResponse>;\n  SendMessage(request: MsgSendMessage): Promise<MsgSendMessageResponse>;\n  SendMessageWithCaller(request: MsgSendMessageWithCaller): Promise<MsgSendMessageWithCallerResponse>;\n  UnlinkTokenPair(request: MsgUnlinkTokenPair): Promise<MsgUnlinkTokenPairResponse>;\n  UnpauseBurningAndMinting(request: MsgUnpauseBurningAndMinting): Promise<MsgUnpauseBurningAndMintingResponse>;\n  UnpauseSendingAndReceivingMessages(\n    request: MsgUnpauseSendingAndReceivingMessages,\n  ): Promise<MsgUnpauseSendingAndReceivingMessagesResponse>;\n  UpdateOwner(request: MsgUpdateOwner): Promise<MsgUpdateOwnerResponse>;\n  UpdateAttesterManager(request: MsgUpdateAttesterManager): Promise<MsgUpdateAttesterManagerResponse>;\n  UpdateTokenController(request: MsgUpdateTokenController): Promise<MsgUpdateTokenControllerResponse>;\n  UpdatePauser(request: MsgUpdatePauser): Promise<MsgUpdatePauserResponse>;\n  UpdateMaxMessageBodySize(request: MsgUpdateMaxMessageBodySize): Promise<MsgUpdateMaxMessageBodySizeResponse>;\n  SetMaxBurnAmountPerMessage(request: MsgSetMaxBurnAmountPerMessage): Promise<MsgSetMaxBurnAmountPerMessageResponse>;\n  UpdateSignatureThreshold(request: MsgUpdateSignatureThreshold): Promise<MsgUpdateSignatureThresholdResponse>;\n}\n\nexport const MsgServiceName = \"circle.cctp.v1.Msg\";\nexport class MsgClientImpl implements Msg {\n  private readonly rpc: Rpc;\n  private readonly service: string;\n  constructor(rpc: Rpc, opts?: { service?: string }) {\n    this.service = opts?.service || MsgServiceName;\n    this.rpc = rpc;\n    this.AcceptOwner = this.AcceptOwner.bind(this);\n    this.AddRemoteTokenMessenger = this.AddRemoteTokenMessenger.bind(this);\n    this.DepositForBurn = this.DepositForBurn.bind(this);\n    this.DepositForBurnWithCaller = this.DepositForBurnWithCaller.bind(this);\n    this.DisableAttester = this.DisableAttester.bind(this);\n    this.EnableAttester = this.EnableAttester.bind(this);\n    this.LinkTokenPair = this.LinkTokenPair.bind(this);\n    this.PauseBurningAndMinting = this.PauseBurningAndMinting.bind(this);\n    this.PauseSendingAndReceivingMessages = this.PauseSendingAndReceivingMessages.bind(this);\n    this.ReceiveMessage = this.ReceiveMessage.bind(this);\n    this.RemoveRemoteTokenMessenger = this.RemoveRemoteTokenMessenger.bind(this);\n    this.ReplaceDepositForBurn = this.ReplaceDepositForBurn.bind(this);\n    this.ReplaceMessage = this.ReplaceMessage.bind(this);\n    this.SendMessage = this.SendMessage.bind(this);\n    this.SendMessageWithCaller = this.SendMessageWithCaller.bind(this);\n    this.UnlinkTokenPair = this.UnlinkTokenPair.bind(this);\n    this.UnpauseBurningAndMinting = this.UnpauseBurningAndMinting.bind(this);\n    this.UnpauseSendingAndReceivingMessages = this.UnpauseSendingAndReceivingMessages.bind(this);\n    this.UpdateOwner = this.UpdateOwner.bind(this);\n    this.UpdateAttesterManager = this.UpdateAttesterManager.bind(this);\n    this.UpdateTokenController = this.UpdateTokenController.bind(this);\n    this.UpdatePauser = this.UpdatePauser.bind(this);\n    this.UpdateMaxMessageBodySize = this.UpdateMaxMessageBodySize.bind(this);\n    this.SetMaxBurnAmountPerMessage = this.SetMaxBurnAmountPerMessage.bind(this);\n    this.UpdateSignatureThreshold = this.UpdateSignatureThreshold.bind(this);\n  }\n  AcceptOwner(request: MsgAcceptOwner): Promise<MsgAcceptOwnerResponse> {\n    const data = MsgAcceptOwner.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"AcceptOwner\", data);\n    return promise.then((data) => MsgAcceptOwnerResponse.decode(_m0.Reader.create(data)));\n  }\n\n  AddRemoteTokenMessenger(request: MsgAddRemoteTokenMessenger): Promise<MsgAddRemoteTokenMessengerResponse> {\n    const data = MsgAddRemoteTokenMessenger.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"AddRemoteTokenMessenger\", data);\n    return promise.then((data) => MsgAddRemoteTokenMessengerResponse.decode(_m0.Reader.create(data)));\n  }\n\n  DepositForBurn(request: MsgDepositForBurn): Promise<MsgDepositForBurnResponse> {\n    const data = MsgDepositForBurn.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"DepositForBurn\", data);\n    return promise.then((data) => MsgDepositForBurnResponse.decode(_m0.Reader.create(data)));\n  }\n\n  DepositForBurnWithCaller(request: MsgDepositForBurnWithCaller): Promise<MsgDepositForBurnWithCallerResponse> {\n    const data = MsgDepositForBurnWithCaller.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"DepositForBurnWithCaller\", data);\n    return promise.then((data) => MsgDepositForBurnWithCallerResponse.decode(_m0.Reader.create(data)));\n  }\n\n  DisableAttester(request: MsgDisableAttester): Promise<MsgDisableAttesterResponse> {\n    const data = MsgDisableAttester.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"DisableAttester\", data);\n    return promise.then((data) => MsgDisableAttesterResponse.decode(_m0.Reader.create(data)));\n  }\n\n  EnableAttester(request: MsgEnableAttester): Promise<MsgEnableAttesterResponse> {\n    const data = MsgEnableAttester.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"EnableAttester\", data);\n    return promise.then((data) => MsgEnableAttesterResponse.decode(_m0.Reader.create(data)));\n  }\n\n  LinkTokenPair(request: MsgLinkTokenPair): Promise<MsgLinkTokenPairResponse> {\n    const data = MsgLinkTokenPair.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"LinkTokenPair\", data);\n    return promise.then((data) => MsgLinkTokenPairResponse.decode(_m0.Reader.create(data)));\n  }\n\n  PauseBurningAndMinting(request: MsgPauseBurningAndMinting): Promise<MsgPauseBurningAndMintingResponse> {\n    const data = MsgPauseBurningAndMinting.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"PauseBurningAndMinting\", data);\n    return promise.then((data) => MsgPauseBurningAndMintingResponse.decode(_m0.Reader.create(data)));\n  }\n\n  PauseSendingAndReceivingMessages(\n    request: MsgPauseSendingAndReceivingMessages,\n  ): Promise<MsgPauseSendingAndReceivingMessagesResponse> {\n    const data = MsgPauseSendingAndReceivingMessages.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"PauseSendingAndReceivingMessages\", data);\n    return promise.then((data) => MsgPauseSendingAndReceivingMessagesResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ReceiveMessage(request: MsgReceiveMessage): Promise<MsgReceiveMessageResponse> {\n    const data = MsgReceiveMessage.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ReceiveMessage\", data);\n    return promise.then((data) => MsgReceiveMessageResponse.decode(_m0.Reader.create(data)));\n  }\n\n  RemoveRemoteTokenMessenger(request: MsgRemoveRemoteTokenMessenger): Promise<MsgRemoveRemoteTokenMessengerResponse> {\n    const data = MsgRemoveRemoteTokenMessenger.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"RemoveRemoteTokenMessenger\", data);\n    return promise.then((data) => MsgRemoveRemoteTokenMessengerResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ReplaceDepositForBurn(request: MsgReplaceDepositForBurn): Promise<MsgReplaceDepositForBurnResponse> {\n    const data = MsgReplaceDepositForBurn.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ReplaceDepositForBurn\", data);\n    return promise.then((data) => MsgReplaceDepositForBurnResponse.decode(_m0.Reader.create(data)));\n  }\n\n  ReplaceMessage(request: MsgReplaceMessage): Promise<MsgReplaceMessageResponse> {\n    const data = MsgReplaceMessage.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"ReplaceMessage\", data);\n    return promise.then((data) => MsgReplaceMessageResponse.decode(_m0.Reader.create(data)));\n  }\n\n  SendMessage(request: MsgSendMessage): Promise<MsgSendMessageResponse> {\n    const data = MsgSendMessage.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"SendMessage\", data);\n    return promise.then((data) => MsgSendMessageResponse.decode(_m0.Reader.create(data)));\n  }\n\n  SendMessageWithCaller(request: MsgSendMessageWithCaller): Promise<MsgSendMessageWithCallerResponse> {\n    const data = MsgSendMessageWithCaller.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"SendMessageWithCaller\", data);\n    return promise.then((data) => MsgSendMessageWithCallerResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UnlinkTokenPair(request: MsgUnlinkTokenPair): Promise<MsgUnlinkTokenPairResponse> {\n    const data = MsgUnlinkTokenPair.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UnlinkTokenPair\", data);\n    return promise.then((data) => MsgUnlinkTokenPairResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UnpauseBurningAndMinting(request: MsgUnpauseBurningAndMinting): Promise<MsgUnpauseBurningAndMintingResponse> {\n    const data = MsgUnpauseBurningAndMinting.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UnpauseBurningAndMinting\", data);\n    return promise.then((data) => MsgUnpauseBurningAndMintingResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UnpauseSendingAndReceivingMessages(\n    request: MsgUnpauseSendingAndReceivingMessages,\n  ): Promise<MsgUnpauseSendingAndReceivingMessagesResponse> {\n    const data = MsgUnpauseSendingAndReceivingMessages.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UnpauseSendingAndReceivingMessages\", data);\n    return promise.then((data) => MsgUnpauseSendingAndReceivingMessagesResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateOwner(request: MsgUpdateOwner): Promise<MsgUpdateOwnerResponse> {\n    const data = MsgUpdateOwner.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateOwner\", data);\n    return promise.then((data) => MsgUpdateOwnerResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateAttesterManager(request: MsgUpdateAttesterManager): Promise<MsgUpdateAttesterManagerResponse> {\n    const data = MsgUpdateAttesterManager.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateAttesterManager\", data);\n    return promise.then((data) => MsgUpdateAttesterManagerResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateTokenController(request: MsgUpdateTokenController): Promise<MsgUpdateTokenControllerResponse> {\n    const data = MsgUpdateTokenController.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateTokenController\", data);\n    return promise.then((data) => MsgUpdateTokenControllerResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdatePauser(request: MsgUpdatePauser): Promise<MsgUpdatePauserResponse> {\n    const data = MsgUpdatePauser.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdatePauser\", data);\n    return promise.then((data) => MsgUpdatePauserResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateMaxMessageBodySize(request: MsgUpdateMaxMessageBodySize): Promise<MsgUpdateMaxMessageBodySizeResponse> {\n    const data = MsgUpdateMaxMessageBodySize.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateMaxMessageBodySize\", data);\n    return promise.then((data) => MsgUpdateMaxMessageBodySizeResponse.decode(_m0.Reader.create(data)));\n  }\n\n  SetMaxBurnAmountPerMessage(request: MsgSetMaxBurnAmountPerMessage): Promise<MsgSetMaxBurnAmountPerMessageResponse> {\n    const data = MsgSetMaxBurnAmountPerMessage.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"SetMaxBurnAmountPerMessage\", data);\n    return promise.then((data) => MsgSetMaxBurnAmountPerMessageResponse.decode(_m0.Reader.create(data)));\n  }\n\n  UpdateSignatureThreshold(request: MsgUpdateSignatureThreshold): Promise<MsgUpdateSignatureThresholdResponse> {\n    const data = MsgUpdateSignatureThreshold.encode(request).finish();\n    const promise = this.rpc.request(this.service, \"UpdateSignatureThreshold\", data);\n    return promise.then((data) => MsgUpdateSignatureThresholdResponse.decode(_m0.Reader.create(data)));\n  }\n}\n\ninterface Rpc {\n  request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;\n}\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\n\nfunction base64FromBytes(arr: Uint8Array): string {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin: string[] = [];\n    arr.forEach((byte) => {\n      bin.push(globalThis.String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\nexport type DeepPartial<T> = T extends Builtin ? T\n  : T extends Long ? string | number | Long : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"names":["MsgAcceptOwner","MsgAcceptOwnerResponse","MsgAddRemoteTokenMessenger","MsgAddRemoteTokenMessengerResponse","MsgClientImpl","MsgDepositForBurn","MsgDepositForBurnResponse","MsgDepositForBurnWithCaller","MsgDepositForBurnWithCallerResponse","MsgDisableAttester","MsgDisableAttesterResponse","MsgEnableAttester","MsgEnableAttesterResponse","MsgLinkTokenPair","MsgLinkTokenPairResponse","MsgPauseBurningAndMinting","MsgPauseBurningAndMintingResponse","MsgPauseSendingAndReceivingMessages","MsgPauseSendingAndReceivingMessagesResponse","MsgReceiveMessage","MsgReceiveMessageResponse","MsgRemoveRemoteTokenMessenger","MsgRemoveRemoteTokenMessengerResponse","MsgReplaceDepositForBurn","MsgReplaceDepositForBurnResponse","MsgReplaceMessage","MsgReplaceMessageResponse","MsgSendMessage","MsgSendMessageResponse","MsgSendMessageWithCaller","MsgSendMessageWithCallerResponse","MsgServiceName","MsgSetMaxBurnAmountPerMessage","MsgSetMaxBurnAmountPerMessageResponse","MsgUnlinkTokenPair","MsgUnlinkTokenPairResponse","MsgUnpauseBurningAndMinting","MsgUnpauseBurningAndMintingResponse","MsgUnpauseSendingAndReceivingMessages","MsgUnpauseSendingAndReceivingMessagesResponse","MsgUpdateAttesterManager","MsgUpdateAttesterManagerResponse","MsgUpdateMaxMessageBodySize","MsgUpdateMaxMessageBodySizeResponse","MsgUpdateOwner","MsgUpdateOwnerResponse","MsgUpdatePauser","MsgUpdatePauserResponse","MsgUpdateSignatureThreshold","MsgUpdateSignatureThresholdResponse","MsgUpdateTokenController","MsgUpdateTokenControllerResponse","protobufPackage","createBaseMsgUpdateOwner","from","newOwner","encode","message","writer","_m0","Writer","create","uint32","string","decode","input","length","reader","Reader","end","undefined","len","pos","tag","skipType","fromJSON","object","isSet","globalThis","String","toJSON","obj","base","fromPartial","createBaseMsgUpdateOwnerResponse","_","createBaseMsgUpdateAttesterManager","newAttesterManager","createBaseMsgUpdateAttesterManagerResponse","createBaseMsgUpdateTokenController","newTokenController","createBaseMsgUpdateTokenControllerResponse","createBaseMsgUpdatePauser","newPauser","createBaseMsgUpdatePauserResponse","createBaseMsgAcceptOwner","createBaseMsgAcceptOwnerResponse","createBaseMsgEnableAttester","attester","createBaseMsgEnableAttesterResponse","createBaseMsgDisableAttester","createBaseMsgDisableAttesterResponse","createBaseMsgPauseBurningAndMinting","createBaseMsgPauseBurningAndMintingResponse","createBaseMsgUnpauseBurningAndMinting","createBaseMsgUnpauseBurningAndMintingResponse","createBaseMsgPauseSendingAndReceivingMessages","createBaseMsgPauseSendingAndReceivingMessagesResponse","createBaseMsgUnpauseSendingAndReceivingMessages","createBaseMsgUnpauseSendingAndReceivingMessagesResponse","createBaseMsgUpdateMaxMessageBodySize","messageSize","Long","UZERO","isZero","uint64","fromValue","toString","createBaseMsgUpdateMaxMessageBodySizeResponse","createBaseMsgSetMaxBurnAmountPerMessage","localToken","amount","createBaseMsgSetMaxBurnAmountPerMessageResponse","createBaseMsgDepositForBurn","destinationDomain","mintRecipient","Uint8Array","burnToken","bytes","Number","bytesFromBase64","Math","round","base64FromBytes","createBaseMsgDepositForBurnResponse","nonce","createBaseMsgDepositForBurnWithCaller","destinationCaller","createBaseMsgDepositForBurnWithCallerResponse","createBaseMsgReplaceDepositForBurn","originalMessage","originalAttestation","newDestinationCaller","newMintRecipient","createBaseMsgReplaceDepositForBurnResponse","createBaseMsgReceiveMessage","attestation","createBaseMsgReceiveMessageResponse","success","bool","Boolean","createBaseMsgSendMessage","recipient","messageBody","createBaseMsgSendMessageResponse","createBaseMsgSendMessageWithCaller","createBaseMsgSendMessageWithCallerResponse","createBaseMsgReplaceMessage","newMessageBody","createBaseMsgReplaceMessageResponse","createBaseMsgUpdateSignatureThreshold","createBaseMsgUpdateSignatureThresholdResponse","createBaseMsgLinkTokenPair","remoteDomain","remoteToken","createBaseMsgLinkTokenPairResponse","createBaseMsgUnlinkTokenPair","createBaseMsgUnlinkTokenPairResponse","createBaseMsgAddRemoteTokenMessenger","domainId","address","createBaseMsgAddRemoteTokenMessengerResponse","createBaseMsgRemoveRemoteTokenMessenger","createBaseMsgRemoveRemoteTokenMessengerResponse","AcceptOwner","request","data","finish","promise","rpc","service","then","AddRemoteTokenMessenger","DepositForBurn","DepositForBurnWithCaller","DisableAttester","EnableAttester","LinkTokenPair","PauseBurningAndMinting","PauseSendingAndReceivingMessages","ReceiveMessage","RemoveRemoteTokenMessenger","ReplaceDepositForBurn","ReplaceMessage","SendMessage","SendMessageWithCaller","UnlinkTokenPair","UnpauseBurningAndMinting","UnpauseSendingAndReceivingMessages","UpdateOwner","UpdateAttesterManager","UpdateTokenController","UpdatePauser","UpdateMaxMessageBodySize","SetMaxBurnAmountPerMessage","UpdateSignatureThreshold","constructor","opts","bind","b64","Buffer","bin","atob","arr","i","charCodeAt","forEach","byte","push","fromCharCode","btoa","join","util","configure","value"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}