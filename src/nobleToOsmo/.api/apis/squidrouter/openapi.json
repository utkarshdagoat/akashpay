{
  "openapi": "3.1.0",
  "info": {
    "version": "1",
    "title": "Squid Api"
  },
  "servers": [
    {
      "url": "https://testnet.api.squidrouter.com"
    }
  ],
  "paths": {
    "/chains": {
      "get": {
        "description": "Returns supported chain/s",
        "summary": "Get supported chains",
        "parameters": [
          {
            "in": "query",
            "name": "chainId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Chain Id",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of supported chains",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "chainName": {
                        "type": "string"
                      },
                      "chainType": {
                        "type": "string"
                      },
                      "chainId": {
                        "type": "string"
                      },
                      "networkName": {
                        "type": "string"
                      },
                      "rpc": {
                        "type": "string"
                      },
                      "internalRpc": {
                        "type": "string"
                      },
                      "blockExplorerUrls": {
                        "type": "string"
                      },
                      "nativeCurrency": {
                        "type": "object"
                      },
                      "chainNativeContracts": {
                        "type": "object"
                      },
                      "axelarContracts": {
                        "type": "object"
                      },
                      "squidContracts": {
                        "type": "object"
                      }
                    },
                    "xml": {
                      "name": "Chain"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unkown error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/route": {
      "get": {
        "description": "Returns transaction route information and call data object",
        "summary": "Get transaction route information",
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Request Id for API Request. If missing, it'll be auto-generated for each request",
            "example": "aa4cc90f-3685-4820-b8b9fc7976affc83"
          },
          {
            "in": "header",
            "name": "x-integrator-id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Integrator Identifier",
            "example": "squid-integrator"
          },
          {
            "in": "query",
            "name": "fromChain",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "From Chain Id",
            "example": 1
          },
          {
            "in": "query",
            "name": "toChain",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "To Chain Id",
            "example": 43114
          },
          {
            "in": "query",
            "name": "fromToken",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "From Chain Token Address",
            "example": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
          },
          {
            "in": "query",
            "name": "toToken",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "To Chain Token Address",
            "example": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
          },
          {
            "in": "query",
            "name": "fromAmount",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Amount to be sent from To Chain",
            "example": "1000000000000000"
          },
          {
            "in": "query",
            "name": "fromAddress",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "From address. EVM address for EVM to Cosmos, and Cosmos address for Cosmos to EVM.",
            "example": "0x8AF962C13411F10214d5b50E4bEACeC42f37c537"
          },
          {
            "in": "query",
            "name": "toAddress",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "To Chain recipient address",
            "example": "0xC182aA0ecb24A674C00C76cE8F1761cC5a10611c"
          },
          {
            "in": "query",
            "name": "slippage",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "slippage allowance, allowed value > 0 and < 99.99",
            "example": "1"
          },
          {
            "in": "query",
            "name": "quoteOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Only get the route quote and exclude call data",
            "example": true
          },
          {
            "in": "query",
            "name": "enableExpress",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Enable Express feature",
            "example": false
          },
          {
            "in": "query",
            "name": "customContractCalls",
            "required": false,
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "callType": {
                    "type": "number",
                    "description": "See Contract call types in Squid documentation",
                    "example": 1
                  },
                  "target": {
                    "type": "string",
                    "description": "Address of the smart contract to be called.",
                    "example": "0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664"
                  },
                  "value": {
                    "type": "string",
                    "description": "Amount of native coin, in most scenarios should be \"0\"",
                    "example": "0"
                  },
                  "callData": {
                    "type": "string",
                    "description": "Contract call encoded call data",
                    "example": "0x095ea7b30000000000000000000000001b02da8cb0d097eb8d57a175b88c7d8b479975060000000000000000000000000000000000000000000000000000000000000000"
                  },
                  "estimatedGas": {
                    "type": "string",
                    "description": "Amount of gas of the call",
                    "example": "400000"
                  },
                  "payload": {
                    "type": "object",
                    "properties": {
                      "tokenAddress": {
                        "type": "string",
                        "description": "Address of the ERC20 token",
                        "example": "0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664"
                      },
                      "inputPos": {
                        "type": "string",
                        "description": "Position of the amount argument in the contract call to set the balance dynamically",
                        "example": 1
                      }
                    }
                  }
                }
              }
            },
            "description": "Array of custom contract calls **(Parameter not supported in Readme due to OpenAPI limitation)**"
          },
          {
            "in": "query",
            "name": "prefer[]",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Agni_v3",
                  "UniswapV2",
                  "UniswapV3",
                  "Ubeswap",
                  "Spookyswap",
                  "Sushiswap",
                  "SushiswapV3",
                  "Stellaswap",
                  "StellaswapV3",
                  "Pangolin",
                  "Curve_v2",
                  "Curve_v2_Pool",
                  "Ellipsis",
                  "FusionX_v2",
                  "FusionX_v3",
                  "Kinetix_v3",
                  "Quickswap",
                  "Stellaswap_Saddle",
                  "Velodrome_V2",
                  "Equalizer",
                  "Equilibre",
                  "Quickswap_v3",
                  "Pancakeswap",
                  "Pancakeswap_v3",
                  "Pancakeswap_stable",
                  "TraderJoe",
                  "Trident",
                  "Platypus",
                  "Wombat",
                  "Zyberswap",
                  "KyberSwap",
                  "KyberSwap_Aggregator",
                  "GMX",
                  "Apeswap",
                  "OpenOcean",
                  "Osmosis",
                  "Thena_v3",
                  "Thena",
                  "Ubeswap_v3",
                  "Zyberswap_v3",
                  "Beamswap",
                  "Horizon",
                  "SwapBased",
                  "Horizon_v3",
                  "Baseswap",
                  "SynthSwap_v2",
                  "SynthSwap_v3"
                ]
              }
            },
            "description": "Array of supported dex names for this transaction",
            "example": "KYBERSWAP_AGGREGATOR"
          },
          {
            "in": "query",
            "name": "receiveGasOnDestination",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Receive gas on destination chain",
            "example": false
          }
        ],
        "responses": {
          "200": {
            "description": "Route API response object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "route": {
                      "type": "object",
                      "properties": {
                        "estimate": {
                          "type": "object",
                          "properties": {
                            "fromAmount": {
                              "type": "string"
                            },
                            "fromAmountUSD": {
                              "type": "string"
                            },
                            "sendAmount": {
                              "type": "string"
                            },
                            "toAmount": {
                              "type": "string"
                            },
                            "toAmountUSD": {
                              "type": "string"
                            },
                            "route": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "feeCosts": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "gasCosts": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "estimatedRouteDuration": {
                              "type": "number"
                            },
                            "exchangeRate": {
                              "type": "string"
                            },
                            "aggregatePriceImpact": {
                              "type": "string"
                            }
                          }
                        },
                        "params": {
                          "type": "object",
                          "properties": {
                            "fromChain": {
                              "type": "string"
                            },
                            "toChain": {
                              "type": "string"
                            },
                            "fromToken": {
                              "type": "object",
                              "properties": {
                                "chainId": {
                                  "type": "number"
                                },
                                "address": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "symbol": {
                                  "type": "string"
                                },
                                "logoURI": {
                                  "type": "string"
                                },
                                "coingeckoId": {
                                  "type": "string"
                                }
                              }
                            },
                            "toToken": {
                              "type": "object",
                              "properties": {
                                "chainId": {
                                  "type": "number"
                                },
                                "address": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "symbol": {
                                  "type": "string"
                                },
                                "logoURI": {
                                  "type": "string"
                                },
                                "coingeckoId": {
                                  "type": "string"
                                }
                              }
                            },
                            "fromAmount": {
                              "type": "string"
                            },
                            "toAddress": {
                              "type": "string"
                            },
                            "slippage": {
                              "type": "number"
                            }
                          }
                        },
                        "transactionRequest": {
                          "type": "object",
                          "properties": {
                            "routeType": {
                              "type": "string"
                            },
                            "targetAddress": {
                              "type": "string"
                            },
                            "data": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "gasLimit": {
                              "type": "string"
                            },
                            "gasPrice": {
                              "type": "string"
                            },
                            "maxFeePerGas": {
                              "type": "string"
                            },
                            "maxPriorityFeePerGas": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unkown error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sdk-info": {
      "get": {
        "description": "Returns Squid SDK information",
        "responses": {
          "200": {
            "description": "Squid SDK Information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chains": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "chainName": {
                            "type": "string"
                          },
                          "chainType": {
                            "type": "string"
                          },
                          "chainId": {
                            "type": "string"
                          },
                          "networkName": {
                            "type": "string"
                          },
                          "rpc": {
                            "type": "string"
                          },
                          "internalRpc": {
                            "type": "string"
                          },
                          "blockExplorerUrls": {
                            "type": "string"
                          },
                          "nativeCurrency": {
                            "type": "object"
                          },
                          "chainNativeContracts": {
                            "type": "object"
                          },
                          "axelarContracts": {
                            "type": "object"
                          },
                          "squidContracts": {
                            "type": "object"
                          }
                        },
                        "xml": {
                          "name": "Chain"
                        }
                      }
                    },
                    "tokens": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "chainId": {
                            "type": "number"
                          },
                          "address": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "logoURI": {
                            "type": "string"
                          },
                          "coingeckoId": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "axelarscanURL": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unkown error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "description": "Query Axelarscan for transaction status",
        "summary": "Get transaction status",
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Request Id for API Request. If missing, it'll be auto-generated for each request",
            "example": "aa4cc90f-3685-4820-b8b9fc7976affc83"
          },
          {
            "in": "header",
            "name": "x-integrator-id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Integrator Identifier",
            "example": "squid-integrator"
          },
          {
            "in": "query",
            "name": "transactionId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Transaction hash on the from chain",
            "example": "0x09f6106db0dc8b387ad11c5cd87bee8590341c64b38dc80952742cea07961a5f"
          },
          {
            "in": "query",
            "name": "fromChainId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Chain Id of the from chain. Mandatory when from chain is a cosmos chain",
            "example": "137"
          },
          {
            "in": "query",
            "name": "toChainId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Chain ID of the to chain",
            "example": "43114"
          }
        ],
        "responses": {
          "200": {
            "description": "Status API response object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "gasStatus": {
                      "type": "string"
                    },
                    "isGMPTransaction": {
                      "type": "string"
                    },
                    "axelarTransactionUrl": {
                      "type": "string"
                    },
                    "fromChain": {
                      "type": "object",
                      "properties": {
                        "chainName": {
                          "type": "string"
                        },
                        "chainType": {
                          "type": "string"
                        },
                        "chainId": {
                          "type": "string"
                        },
                        "networkName": {
                          "type": "string"
                        },
                        "rpc": {
                          "type": "string"
                        },
                        "internalRpc": {
                          "type": "string"
                        },
                        "blockExplorerUrls": {
                          "type": "string"
                        },
                        "nativeCurrency": {
                          "type": "object"
                        },
                        "chainNativeContracts": {
                          "type": "object"
                        },
                        "axelarContracts": {
                          "type": "object"
                        },
                        "squidContracts": {
                          "type": "object"
                        }
                      },
                      "xml": {
                        "name": "Chain"
                      }
                    },
                    "toChain": {
                      "type": "object",
                      "properties": {
                        "chainName": {
                          "type": "string"
                        },
                        "chainType": {
                          "type": "string"
                        },
                        "chainId": {
                          "type": "string"
                        },
                        "networkName": {
                          "type": "string"
                        },
                        "rpc": {
                          "type": "string"
                        },
                        "internalRpc": {
                          "type": "string"
                        },
                        "blockExplorerUrls": {
                          "type": "string"
                        },
                        "nativeCurrency": {
                          "type": "object"
                        },
                        "chainNativeContracts": {
                          "type": "object"
                        },
                        "axelarContracts": {
                          "type": "object"
                        },
                        "squidContracts": {
                          "type": "object"
                        }
                      },
                      "xml": {
                        "name": "Chain"
                      }
                    },
                    "timeSpent": {
                      "type": "object"
                    },
                    "error": {
                      "type": "string"
                    },
                    "routeStatus": {
                      "schema": {
                        "type": "array",
                        "items": "#/components/schemas/routeState"
                      }
                    },
                    "squidTransactionStatus": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unkown error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/token-price": {
      "get": {
        "description": "Returns token price",
        "summary": "Get token price",
        "parameters": [
          {
            "in": "query",
            "name": "chainId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Chain Id",
            "example": 1
          },
          {
            "in": "query",
            "name": "tokenAddress",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Token Address",
            "example": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
          }
        ],
        "responses": {
          "200": {
            "description": "Token price in USD",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unkown error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tokens": {
      "get": {
        "description": "Returns supported token/s",
        "summary": "Get supported tokens",
        "parameters": [
          {
            "in": "query",
            "name": "chainId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Chain Id",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Supported tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "chainId": {
                        "type": "number"
                      },
                      "address": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "logoURI": {
                        "type": "string"
                      },
                      "coingeckoId": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unkown error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errorType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Chain": {
        "type": "object",
        "properties": {
          "chainName": {
            "type": "string"
          },
          "chainType": {
            "type": "string"
          },
          "chainId": {
            "type": "string"
          },
          "networkName": {
            "type": "string"
          },
          "rpc": {
            "type": "string"
          },
          "internalRpc": {
            "type": "string"
          },
          "blockExplorerUrls": {
            "type": "string"
          },
          "nativeCurrency": {
            "type": "object"
          },
          "chainNativeContracts": {
            "type": "object"
          },
          "axelarContracts": {
            "type": "object"
          },
          "squidContracts": {
            "type": "object"
          }
        },
        "xml": {
          "name": "Chain"
        }
      },
      "Chains": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "chainName": {
              "type": "string"
            },
            "chainType": {
              "type": "string"
            },
            "chainId": {
              "type": "string"
            },
            "networkName": {
              "type": "string"
            },
            "rpc": {
              "type": "string"
            },
            "internalRpc": {
              "type": "string"
            },
            "blockExplorerUrls": {
              "type": "string"
            },
            "nativeCurrency": {
              "type": "object"
            },
            "chainNativeContracts": {
              "type": "object"
            },
            "axelarContracts": {
              "type": "object"
            },
            "squidContracts": {
              "type": "object"
            }
          },
          "xml": {
            "name": "Chain"
          }
        }
      },
      "CustomContractCall": {
        "type": "object",
        "properties": {
          "callType": {
            "type": "number",
            "description": "See Contract call types in Squid documentation",
            "example": 1
          },
          "target": {
            "type": "string",
            "description": "Address of the smart contract to be called.",
            "example": "0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664"
          },
          "value": {
            "type": "string",
            "description": "Amount of native coin, in most scenarios should be \"0\"",
            "example": "0"
          },
          "callData": {
            "type": "string",
            "description": "Contract call encoded call data",
            "example": "0x095ea7b30000000000000000000000001b02da8cb0d097eb8d57a175b88c7d8b479975060000000000000000000000000000000000000000000000000000000000000000"
          },
          "estimatedGas": {
            "type": "string",
            "description": "Amount of gas of the call",
            "example": "400000"
          },
          "payload": {
            "type": "object",
            "properties": {
              "tokenAddress": {
                "type": "string",
                "description": "Address of the ERC20 token",
                "example": "0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664"
              },
              "inputPos": {
                "type": "string",
                "description": "Position of the amount argument in the contract call to set the balance dynamically",
                "example": 1
              }
            }
          }
        }
      },
      "DexNames": {
        "type": "string",
        "enum": [
          "Agni_v3",
          "UniswapV2",
          "UniswapV3",
          "Ubeswap",
          "Spookyswap",
          "Sushiswap",
          "SushiswapV3",
          "Stellaswap",
          "StellaswapV3",
          "Pangolin",
          "Curve_v2",
          "Curve_v2_Pool",
          "Ellipsis",
          "FusionX_v2",
          "FusionX_v3",
          "Kinetix_v3",
          "Quickswap",
          "Stellaswap_Saddle",
          "Velodrome_V2",
          "Equalizer",
          "Equilibre",
          "Quickswap_v3",
          "Pancakeswap",
          "Pancakeswap_v3",
          "Pancakeswap_stable",
          "TraderJoe",
          "Trident",
          "Platypus",
          "Wombat",
          "Zyberswap",
          "KyberSwap",
          "KyberSwap_Aggregator",
          "GMX",
          "Apeswap",
          "OpenOcean",
          "Osmosis",
          "Thena_v3",
          "Thena",
          "Ubeswap_v3",
          "Zyberswap_v3",
          "Beamswap",
          "Horizon",
          "SwapBased",
          "Horizon_v3",
          "Baseswap",
          "SynthSwap_v2",
          "SynthSwap_v3"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errorType": {
            "type": "string"
          }
        }
      },
      "Route": {
        "type": "object",
        "properties": {
          "route": {
            "type": "object",
            "properties": {
              "estimate": {
                "type": "object",
                "properties": {
                  "fromAmount": {
                    "type": "string"
                  },
                  "fromAmountUSD": {
                    "type": "string"
                  },
                  "sendAmount": {
                    "type": "string"
                  },
                  "toAmount": {
                    "type": "string"
                  },
                  "toAmountUSD": {
                    "type": "string"
                  },
                  "route": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "feeCosts": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "gasCosts": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "estimatedRouteDuration": {
                    "type": "number"
                  },
                  "exchangeRate": {
                    "type": "string"
                  },
                  "aggregatePriceImpact": {
                    "type": "string"
                  }
                }
              },
              "params": {
                "type": "object",
                "properties": {
                  "fromChain": {
                    "type": "string"
                  },
                  "toChain": {
                    "type": "string"
                  },
                  "fromToken": {
                    "type": "object",
                    "properties": {
                      "chainId": {
                        "type": "number"
                      },
                      "address": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "logoURI": {
                        "type": "string"
                      },
                      "coingeckoId": {
                        "type": "string"
                      }
                    }
                  },
                  "toToken": {
                    "type": "object",
                    "properties": {
                      "chainId": {
                        "type": "number"
                      },
                      "address": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "logoURI": {
                        "type": "string"
                      },
                      "coingeckoId": {
                        "type": "string"
                      }
                    }
                  },
                  "fromAmount": {
                    "type": "string"
                  },
                  "toAddress": {
                    "type": "string"
                  },
                  "slippage": {
                    "type": "number"
                  }
                }
              },
              "transactionRequest": {
                "type": "object",
                "properties": {
                  "routeType": {
                    "type": "string"
                  },
                  "targetAddress": {
                    "type": "string"
                  },
                  "data": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "gasLimit": {
                    "type": "string"
                  },
                  "gasPrice": {
                    "type": "string"
                  },
                  "maxFeePerGas": {
                    "type": "string"
                  },
                  "maxPriorityFeePerGas": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "SdkInfo": {
        "type": "object",
        "properties": {
          "chains": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "chainName": {
                  "type": "string"
                },
                "chainType": {
                  "type": "string"
                },
                "chainId": {
                  "type": "string"
                },
                "networkName": {
                  "type": "string"
                },
                "rpc": {
                  "type": "string"
                },
                "internalRpc": {
                  "type": "string"
                },
                "blockExplorerUrls": {
                  "type": "string"
                },
                "nativeCurrency": {
                  "type": "object"
                },
                "chainNativeContracts": {
                  "type": "object"
                },
                "axelarContracts": {
                  "type": "object"
                },
                "squidContracts": {
                  "type": "object"
                }
              },
              "xml": {
                "name": "Chain"
              }
            }
          },
          "tokens": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "chainId": {
                  "type": "number"
                },
                "address": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "symbol": {
                  "type": "string"
                },
                "logoURI": {
                  "type": "string"
                },
                "coingeckoId": {
                  "type": "string"
                }
              }
            }
          },
          "axelarscanURL": {
            "type": "string"
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "gasStatus": {
            "type": "string"
          },
          "isGMPTransaction": {
            "type": "string"
          },
          "axelarTransactionUrl": {
            "type": "string"
          },
          "fromChain": {
            "type": "object",
            "properties": {
              "chainName": {
                "type": "string"
              },
              "chainType": {
                "type": "string"
              },
              "chainId": {
                "type": "string"
              },
              "networkName": {
                "type": "string"
              },
              "rpc": {
                "type": "string"
              },
              "internalRpc": {
                "type": "string"
              },
              "blockExplorerUrls": {
                "type": "string"
              },
              "nativeCurrency": {
                "type": "object"
              },
              "chainNativeContracts": {
                "type": "object"
              },
              "axelarContracts": {
                "type": "object"
              },
              "squidContracts": {
                "type": "object"
              }
            },
            "xml": {
              "name": "Chain"
            }
          },
          "toChain": {
            "type": "object",
            "properties": {
              "chainName": {
                "type": "string"
              },
              "chainType": {
                "type": "string"
              },
              "chainId": {
                "type": "string"
              },
              "networkName": {
                "type": "string"
              },
              "rpc": {
                "type": "string"
              },
              "internalRpc": {
                "type": "string"
              },
              "blockExplorerUrls": {
                "type": "string"
              },
              "nativeCurrency": {
                "type": "object"
              },
              "chainNativeContracts": {
                "type": "object"
              },
              "axelarContracts": {
                "type": "object"
              },
              "squidContracts": {
                "type": "object"
              }
            },
            "xml": {
              "name": "Chain"
            }
          },
          "timeSpent": {
            "type": "object"
          },
          "error": {
            "type": "string"
          },
          "routeStatus": {
            "schema": {
              "type": "array",
              "items": "#/components/schemas/routeState"
            }
          },
          "squidTransactionStatus": {
            "type": "string"
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "logoURI": {
            "type": "string"
          },
          "coingeckoId": {
            "type": "string"
          }
        }
      },
      "Token-Price": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number"
          }
        }
      },
      "Tokens": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "chainId": {
              "type": "number"
            },
            "address": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "symbol": {
              "type": "string"
            },
            "logoURI": {
              "type": "string"
            },
            "coingeckoId": {
              "type": "string"
            }
          }
        }
      },
      "routeState": {
        "type": "object",
        "properties": {
          "chainId": {
            "type": [
              "string",
              "number"
            ]
          },
          "txHash": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      }
    }
  }
}